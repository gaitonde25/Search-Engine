b'The only difference between the easy and the hard versions is constraints.'
b'A subsequence is a string that can be derived from another string by deleting some or no symbols without changing the order of the remaining symbols. Characters to be deleted are not required to go successively, there can be any gaps between them. For example, for the string "abaca" the following strings are subsequences: "abaca", "aba", "aaa", "a" and "" (empty string). But the following strings are not subsequences: "aabaca", "cb" and "bcaa".'
b'You are given a string ss consisting of nn lowercase Latin letters.'
b"In one move you can take any subsequence tt of the given string and add it to the set SS. The set SS can't contain duplicates. This move costs n\xe2\x88\x92|t|n\xe2\x88\x92|t|, where |t||t| is the length of the added subsequence (i.e. the price equals to the number of the deleted characters)."
b'Your task is to find out the minimum possible total cost to obtain a set SS of size kk or report that it is impossible to do so.'
b'Input'
b'The first line of the input contains two integers nn and kk (1\xe2\x89\xa4n,k\xe2\x89\xa41001\xe2\x89\xa4n,k\xe2\x89\xa4100) \xe2\x80\x94 the length of the string and the size of the set, correspondingly.'
b'The second line of the input contains a string ss consisting of nn lowercase Latin letters.'
b'Output'
b'Print one integer \xe2\x80\x94 if it is impossible to obtain the set SS of size kk, print -1. Otherwise, print the minimum possible total cost to do it.'
Tags
dp, graphs, implementation, shortest paths, *2000
