b'You have a set of nn discs, the ii-th disc has radius ii. Initially, these discs are split among mm towers: each tower contains at least one disc, and the discs in each tower are sorted in descending order of their radii from bottom to top.'
b'You would like to assemble one tower containing all of those discs. To do so, you may choose two different towers ii and jj (each containing at least one disc), take several (possibly all) top discs from the tower ii and put them on top of the tower jj in the same order, as long as the top disc of tower jj is bigger than each of the discs you move. You may perform this operation any number of times.'
b'For example, if you have two towers containing discs [6,4,2,1][6,4,2,1] and [8,7,5,3][8,7,5,3] (in order from bottom to top), there are only two possible operations:'
b'  move disc 11 from the first tower to the second tower, so the towers are [6,4,2][6,4,2] and [8,7,5,3,1][8,7,5,3,1];  move discs [2,1][2,1] from the first tower to the second tower, so the towers are [6,4][6,4] and [8,7,5,3,2,1][8,7,5,3,2,1]. '
b'Let the difficulty of some set of towers be the minimum number of operations required to assemble one tower containing all of the discs. For example, the difficulty of the set of towers [[3,1],[2]][[3,1],[2]] is 22: you may move the disc 11 to the second tower, and then move both discs from the second tower to the first tower.'
b'You are given m\xe2\x88\x921m\xe2\x88\x921 queries. Each query is denoted by two numbers aiai and bibi, and means "merge the towers aiai and bibi" (that is, take all discs from these two towers and assemble a new tower containing all of them in descending order of their radii from top to bottom). The resulting tower gets index aiai.'
b'For each k\xe2\x88\x88[0,m\xe2\x88\x921]k\xe2\x88\x88[0,m\xe2\x88\x921], calculate the difficulty of the set of towers after the first kk queries are performed.'
b'Input'
b'The first line of the input contains two integers nn and mm (2\xe2\x89\xa4m\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851052\xe2\x89\xa4m\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of discs and the number of towers, respectively.'
b'The second line contains nn integers t1t1, t2t2, ..., tntn (1\xe2\x89\xa4ti\xe2\x89\xa4m1\xe2\x89\xa4ti\xe2\x89\xa4m), where titi is the index of the tower disc ii belongs to. Each value from 11 to mm appears in this sequence at least once.'
b'Then m\xe2\x88\x921m\xe2\x88\x921 lines follow, denoting the queries. Each query is represented by two integers aiai and bibi (1\xe2\x89\xa4ai,bi\xe2\x89\xa4m1\xe2\x89\xa4ai,bi\xe2\x89\xa4m, ai\xe2\x89\xa0biai\xe2\x89\xa0bi), meaning that, during the ii-th query, the towers with indices aiai and bibi are merged (aiai and bibi are chosen in such a way that these towers exist before the ii-th query).'
b'Output'
b'Print mm integers. The kk-th integer (00-indexed) should be equal to the difficulty of the set of towers after the first kk queries are performed.'
Tags
data structures, dsu, implementation, trees, *2300
