b'There is a rectangular grid of size n\xc3\x97mn\xc3\x97m. Each cell has a number written on it; the number on the cell (i,ji,j) is ai,jai,j. Your task is to calculate the number of paths from the upper-left cell (1,11,1) to the bottom-right cell (n,mn,m) meeting the following constraints:'
b'  You can move to the right or to the bottom only. Formally, from the cell (i,ji,j) you may move to the cell (i,j+1i,j+1) or to the cell (i+1,ji+1,j). The target cell can\'t be outside of the grid.  The xor of all the numbers on the path from the cell (1,11,1) to the cell (n,mn,m) must be equal to kk (xor operation is the bitwise exclusive OR, it is represented as \'^\' in Java or C++ and "xor" in Pascal). '
b'Find the number of such paths in the given grid.'
b'Input'
b'The first line of the input contains three integers nn, mm and kk (1\xe2\x89\xa4n,m\xe2\x89\xa4201\xe2\x89\xa4n,m\xe2\x89\xa420, 0\xe2\x89\xa4k\xe2\x89\xa410180\xe2\x89\xa4k\xe2\x89\xa41018) \xe2\x80\x94 the height and the width of the grid, and the number kk.'
b'The next nn lines contain mm integers each, the jj-th element in the ii-th line is ai,jai,j (0\xe2\x89\xa4ai,j\xe2\x89\xa410180\xe2\x89\xa4ai,j\xe2\x89\xa41018).'
b'Output'
b'Print one integer \xe2\x80\x94 the number of paths from (1,11,1) to (n,mn,m) with xor sum equal to kk.'
Tags
bitmasks, brute force, dp, meet-in-the-middle, *2100
