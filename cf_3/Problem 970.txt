b'A balanced bracket sequence is defined as an integer sequence that can be built with the following rules:'
b'  The empty sequence is balanced.  If [a1,\xe2\x80\xa6,an][a1,\xe2\x80\xa6,an] and [b1,\xe2\x80\xa6,bm][b1,\xe2\x80\xa6,bm] are balanced, then their concatenation [a1,\xe2\x80\xa6,an,b1,\xe2\x80\xa6,bm][a1,\xe2\x80\xa6,an,b1,\xe2\x80\xa6,bm] is balanced.  If xx is a positive integer and [a1,\xe2\x80\xa6,an][a1,\xe2\x80\xa6,an] is balanced, then [x,a1,\xe2\x80\xa6,an,\xe2\x88\x92x][x,a1,\xe2\x80\xa6,an,\xe2\x88\x92x] is balanced. '
b'The positive numbers can be imagined as opening brackets and the negative numbers as closing brackets, where matching brackets must have the same type (absolute value). For example, [1,2,\xe2\x88\x922,\xe2\x88\x921][1,2,\xe2\x88\x922,\xe2\x88\x921] and [1,3,\xe2\x88\x923,2,\xe2\x88\x922,\xe2\x88\x921][1,3,\xe2\x88\x923,2,\xe2\x88\x922,\xe2\x88\x921] are balanced, but [1,2,\xe2\x88\x921,\xe2\x88\x922][1,2,\xe2\x88\x921,\xe2\x88\x922] and [\xe2\x88\x921,1][\xe2\x88\x921,1] are not balanced.'
b'There are 2n2n cards. Each card has a number on the front and a number on the back. Each integer 1,\xe2\x88\x921,2,\xe2\x88\x922,\xe2\x80\xa6,n,\xe2\x88\x92n1,\xe2\x88\x921,2,\xe2\x88\x922,\xe2\x80\xa6,n,\xe2\x88\x92n appears exactly once on the front of some card and exactly once on the back of some (not necessarily the same) card.'
b'You can reorder the cards however you like. You are not allowed to flip cards, so numbers cannot move between the front and back. Your task is to order the cards so that the sequences given by the front numbers and the back numbers are both balanced, or report that it is impossible.'
b'Input'
b'The first line contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of bracket types, and half the number of cards.'
b'The next 2n2n lines describe the cards. The ii-th of these lines contains two integers aiai, bibi (\xe2\x88\x92n\xe2\x89\xa4ai,bi\xe2\x89\xa4n\xe2\x88\x92n\xe2\x89\xa4ai,bi\xe2\x89\xa4n, ai\xe2\x89\xa00ai\xe2\x89\xa00, bi\xe2\x89\xa00bi\xe2\x89\xa00) \xe2\x80\x94 the numbers on the front and back of the ii-th card, respectively. Every integer 1,\xe2\x88\x921,2,\xe2\x88\x922,\xe2\x80\xa6,n,\xe2\x88\x92n1,\xe2\x88\x921,2,\xe2\x88\x922,\xe2\x80\xa6,n,\xe2\x88\x92n appears exactly once as aiai and exactly once as bibi.'
b'Output'
b'On the first line, output "YES" if it\'s possible to reorder these cards to satisfy the condition. Otherwise, output "NO". You can print each letter in any case (upper or lower).'
b'If it is possible, on the next 2n2n lines output the cards in an order so that the front and back are both balanced. If there are multiple solutions, you may output any.'
Tags
constructive algorithms, data structures, divide and conquer, geometry, graphs, implementation, *3500
