b'Gildong was hiking a mountain, walking by millions of trees. Inspired by them, he suddenly came up with an interesting idea for trees in data structures: What if we add another edge in a tree?'
b"Then he found that such tree-like graphs are called 1-trees. Since Gildong was bored of solving too many tree problems, he wanted to see if similar techniques in trees can be used in 1-trees as well. Instead of solving it by himself, he's going to test you by providing queries on 1-trees."
b"First, he'll provide you a tree (not 1-tree) with nn vertices, then he will ask you qq queries. Each query contains 55 integers: xx, yy, aa, bb, and kk. This means you're asked to determine if there exists a path from vertex aa to bb that contains exactly kk edges after adding a bidirectional edge between vertices xx and yy. A path can contain the same vertices and same edges multiple times. All queries are independent of each other; i.e. the added edge in a query is removed in the next query."
b'Input'
b'The first line contains an integer nn (3\xe2\x89\xa4n\xe2\x89\xa41053\xe2\x89\xa4n\xe2\x89\xa4105), the number of vertices of the tree.'
b'Next n\xe2\x88\x921n\xe2\x88\x921 lines contain two integers uu and vv (1\xe2\x89\xa4u,v\xe2\x89\xa4n1\xe2\x89\xa4u,v\xe2\x89\xa4n, u\xe2\x89\xa0vu\xe2\x89\xa0v) each, which means there is an edge between vertex uu and vv. All edges are bidirectional and distinct.'
b'Next line contains an integer qq (1\xe2\x89\xa4q\xe2\x89\xa41051\xe2\x89\xa4q\xe2\x89\xa4105), the number of queries Gildong wants to ask.'
b'Next qq lines contain five integers xx, yy, aa, bb, and kk each (1\xe2\x89\xa4x,y,a,b\xe2\x89\xa4n1\xe2\x89\xa4x,y,a,b\xe2\x89\xa4n, x\xe2\x89\xa0yx\xe2\x89\xa0y, 1\xe2\x89\xa4k\xe2\x89\xa41091\xe2\x89\xa4k\xe2\x89\xa4109) \xe2\x80\x93 the integers explained in the description. It is guaranteed that the edge between xx and yy does not exist in the original tree.'
b'Output'
b'For each query, print "YES" if there exists a path that contains exactly kk edges from vertex aa to bb after adding an edge between vertices xx and yy. Otherwise, print "NO".'
b'You can print each letter in any case (upper or lower).'
Tags
data structures, dfs and similar, shortest paths, trees, *2000
