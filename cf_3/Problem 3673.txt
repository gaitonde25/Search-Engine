b'You are given a string s consisting of n lowercase Latin letters.'
b"Let's denote k-substring of s as a string subsk\xe2\x80\x89=\xe2\x80\x89sksk\xe2\x80\x89+\xe2\x80\x891..sn\xe2\x80\x89+\xe2\x80\x891\xe2\x80\x89-\xe2\x80\x89k. Obviously, subs1\xe2\x80\x89=\xe2\x80\x89s, and there are exactly  such substrings."
b"Let's call some string t an odd proper suprefix of a string T iff the following conditions are met:"
b' |T|\xe2\x80\x89>\xe2\x80\x89|t|;  |t| is an odd number;  t is simultaneously a prefix and a suffix of T.'
b'For evey k-substring () of s you have to calculate the maximum length of its odd proper suprefix.'
b'Input'
b'The first line contains one integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106) \xe2\x80\x94 the length s.'
b'The second line contains the string s consisting of n lowercase Latin letters.'
b'Output'
b'Print  integers. i-th of them should be equal to maximum length of an odd proper suprefix of i-substring of s (or \xe2\x80\x89-\xe2\x80\x891, if there is no such string that is an odd proper suprefix of i-substring).'
Tags
binary search, hashing, string suffix structures, *2700
