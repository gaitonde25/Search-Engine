b'Sonya likes ice cream very much. She eats it even during programming competitions. That is why the girl decided that she wants to open her own ice cream shops.'
b'Sonya lives in a city with nn junctions and n\xe2\x88\x921n\xe2\x88\x921 streets between them. All streets are two-way and connect two junctions. It is possible to travel from any junction to any other using one or more streets. City Hall allows opening shops only on junctions. The girl cannot open shops in the middle of streets. '
b'Sonya has exactly kk friends whom she can trust. If she opens a shop, one of her friends has to work there and not to allow anybody to eat an ice cream not paying for it. Since Sonya does not want to skip an important competition, she will not work in shops personally.'
b'Sonya wants all her ice cream shops to form a simple path of the length rr (1\xe2\x89\xa4r\xe2\x89\xa4k1\xe2\x89\xa4r\xe2\x89\xa4k), i.e. to be located in different junctions f1,f2,\xe2\x80\xa6,frf1,f2,\xe2\x80\xa6,fr and there is street between fifi and fi+1fi+1 for each ii from 11 to r\xe2\x88\x921r\xe2\x88\x921.'
b'The girl takes care of potential buyers, so she also wants to minimize the maximum distance between the junctions to the nearest ice cream shop. The distance between two junctions aa and bb is equal to the sum of all the street lengths that you need to pass to get from the junction aa to the junction bb. So Sonya wants to minimize'
b'maxamin1\xe2\x89\xa4i\xe2\x89\xa4rda,fimaxamin1\xe2\x89\xa4i\xe2\x89\xa4rda,fi'
b"where aa takes a value of all possible nn junctions, fifi\xc2\xa0\xe2\x80\x94 the junction where the ii-th Sonya's shop is located, and dx,ydx,y\xc2\xa0\xe2\x80\x94 the distance between the junctions xx and yy."
b'Sonya is not sure that she can find the optimal shops locations, that is why she is asking you to help her to open not more than kk shops that will form a simple path and the maximum distance between any junction and the nearest shop would be minimal. '
b'Input'
b'The first line contains two integers nn and kk (1\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa41051\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa4105)\xc2\xa0\xe2\x80\x94 the number of junctions and friends respectively.'
b'Each of the next n\xe2\x88\x921n\xe2\x88\x921 lines contains three integers uiui, vivi, and didi (1\xe2\x89\xa4ui,vi\xe2\x89\xa4n1\xe2\x89\xa4ui,vi\xe2\x89\xa4n, vi\xe2\x89\xa0uivi\xe2\x89\xa0ui, 1\xe2\x89\xa4d\xe2\x89\xa41041\xe2\x89\xa4d\xe2\x89\xa4104)\xc2\xa0\xe2\x80\x94 junctions that are connected by a street and the length of this street. It is guaranteed that each pair of junctions is connected by at most one street. It is guaranteed that you can get from any junctions to any other.'
b'Output'
b"Print one number\xc2\xa0\xe2\x80\x94 the minimal possible maximum distance that you need to pass to get from any junction to the nearest ice cream shop. Sonya's shops must form a simple path and the number of shops must be at most kk."
Tags
binary search, data structures, dp, greedy, shortest paths, trees, *2400
