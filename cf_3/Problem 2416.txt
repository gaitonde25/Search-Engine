b'Monocarp has got two strings ss and tt having equal length. Both strings consist of lowercase Latin letters "a" and "b". '
b'Monocarp wants to make these two strings ss and tt equal to each other. He can do the following operation any number of times: choose an index pos1pos1 in the string ss, choose an index pos2pos2 in the string tt, and swap spos1spos1 with tpos2tpos2.'
b'You have to determine the minimum number of operations Monocarp has to perform to make ss and tt equal, and print any optimal sequence of operations \xe2\x80\x94 or say that it is impossible to make these strings equal.'
b'Input'
b'The first line contains one integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105)(1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the length of ss and tt.'
b'The second line contains one string ss consisting of nn characters "a" and "b". '
b'The third line contains one string tt consisting of nn characters "a" and "b". '
b'Output'
b'If it is impossible to make these strings equal, print \xe2\x88\x921\xe2\x88\x921.'
b'Otherwise, in the first line print kk \xe2\x80\x94 the minimum number of operations required to make the strings equal. In each of the next kk lines print two integers \xe2\x80\x94 the index in the string ss and the index in the string tt that should be used in the corresponding swap operation. '
Tags
constructive algorithms, greedy, *1500
