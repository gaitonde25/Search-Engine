b'Yash is finally tired of computing the length of the longest Fibonacci-ish sequence. He now plays around with more complex things such as Fibonacci-ish potentials. '
b'Fibonacci-ish potential of an array ai is computed as follows: '
b'  Remove all elements j if there exists i\xe2\x80\x89<\xe2\x80\x89j such that ai\xe2\x80\x89=\xe2\x80\x89aj.  Sort the remaining elements in ascending order, i.e. a1\xe2\x80\x89<\xe2\x80\x89a2\xe2\x80\x89<\xe2\x80\x89...\xe2\x80\x89<\xe2\x80\x89an.  Compute the potential as P(a)\xe2\x80\x89=\xe2\x80\x89a1\xc2\xb7F1\xe2\x80\x89+\xe2\x80\x89a2\xc2\xb7F2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89an\xc2\xb7Fn, where Fi is the i-th Fibonacci number (see notes for clarification). '
b'You are given an array ai of length n and q ranges from lj to rj. For each range j you have to compute the Fibonacci-ish potential of the array bi, composed using all elements of ai from lj to rj inclusive. Find these potentials modulo m.'
b'Input'
b'The first line of the input contains integers of n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930\xe2\x80\x89000)\xc2\xa0\xe2\x80\x94 the length of the initial array and the modulo, respectively.'
b'The next line contains n integers ai (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109)\xc2\xa0\xe2\x80\x94 elements of the array.'
b'Then follow the number of ranges q (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89q\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8930\xe2\x80\x89000).'
b'Last q lines contain pairs of indices li and ri (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89li\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ri\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n)\xc2\xa0\xe2\x80\x94 ranges to compute Fibonacci-ish potentials.'
b'Output'
b'Print q lines, i-th of them must contain the Fibonacci-ish potential of the i-th range modulo m.'
Tags
data structures, implementation, *3100
