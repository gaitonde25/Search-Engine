b'Recently, you found a bot to play "Rock paper scissors" with. Unfortunately, the bot uses quite a simple algorithm to play: he has a string s=s1s2\xe2\x80\xa6sns=s1s2\xe2\x80\xa6sn of length nn where each letter is either R, S or P.'
b'While initializing, the bot is choosing a starting index pospos (1\xe2\x89\xa4pos\xe2\x89\xa4n1\xe2\x89\xa4pos\xe2\x89\xa4n), and then it can play any number of rounds. In the first round, he chooses "Rock", "Scissors" or "Paper" based on the value of sposspos: '
b'  if sposspos is equal to R the bot chooses "Rock";  if sposspos is equal to S the bot chooses "Scissors";  if sposspos is equal to P the bot chooses "Paper"; '
b"In the second round, the bot's choice is based on the value of spos+1spos+1. In the third round\xc2\xa0\xe2\x80\x94 on spos+2spos+2 and so on. After snsn the bot returns to s1s1 and continues his game."
b"You plan to play nn rounds and you've already figured out the string ss but still don't know what is the starting index pospos. But since the bot's tactic is so boring, you've decided to find nn choices to each round to maximize the average number of wins."
b"In other words, let's suggest your choices are c1c2\xe2\x80\xa6cnc1c2\xe2\x80\xa6cn and if the bot starts from index pospos then you'll win in win(pos)win(pos) rounds. Find c1c2\xe2\x80\xa6cnc1c2\xe2\x80\xa6cn such that win(1)+win(2)+\xe2\x8b\xaf+win(n)nwin(1)+win(2)+\xe2\x8b\xaf+win(n)n is maximum possible."
b'Input'
b'The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa410001\xe2\x89\xa4t\xe2\x89\xa41000)\xc2\xa0\xe2\x80\x94 the number of test cases.'
b'Next tt lines contain test cases\xc2\xa0\xe2\x80\x94 one per line. The first and only line of each test case contains string s=s1s2\xe2\x80\xa6sns=s1s2\xe2\x80\xa6sn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105; si\xe2\x88\x88{R,S,P}si\xe2\x88\x88{R,S,P})\xc2\xa0\xe2\x80\x94 the string of the bot.'
b"It's guaranteed that the total length of all strings in one test doesn't exceed 2\xe2\x8b\x851052\xe2\x8b\x85105."
b'Output'
b'For each test case, print nn choices c1c2\xe2\x80\xa6cnc1c2\xe2\x80\xa6cn to maximize the average number of wins. Print them in the same manner as the string ss.'
b'If there are multiple optimal answers, print any of them.'
Tags
greedy, *1400
