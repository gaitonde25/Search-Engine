b'Vanya wants to minimize a tree. He can perform the following operation multiple times: choose a vertex v, and two disjoint (except for v) paths of equal length a0\xe2\x80\x89=\xe2\x80\x89v, a1, ..., ak, and b0\xe2\x80\x89=\xe2\x80\x89v, b1, ..., bk. Additionally, vertices a1, ..., ak, b1, ..., bk must not have any neighbours in the tree other than adjacent vertices of corresponding paths. After that, one of the paths may be merged into the other, that is, the vertices b1, ..., bk can be effectively erased:'
b'  '
b'Help Vanya determine if it possible to make the tree into a path via a sequence of described operations, and if the answer is positive, also determine the shortest length of such path.'
b'Input'
b'The first line of input contains the number of vertices n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7105).'
b'Next n\xe2\x80\x89-\xe2\x80\x891 lines describe edges of the tree. Each of these lines contains two space-separated integers u and v (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89u,\xe2\x80\x89v\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n, u\xe2\x80\x89\xe2\x89\xa0\xe2\x80\x89v)\xc2\xa0\xe2\x80\x94 indices of endpoints of the corresponding edge. It is guaranteed that the given graph is a tree.'
b'Output'
b'If it is impossible to obtain a path, print -1. Otherwise, print the minimum number of edges in a possible path.'
Tags
dfs and similar, dp, greedy, implementation, trees, *2200
