b'The only difference between easy and hard versions is constraints.'
b'You are given nn segments on the coordinate axis OXOX. Segments can intersect, lie inside each other and even coincide. The ii-th segment is [li;ri][li;ri] (li\xe2\x89\xa4rili\xe2\x89\xa4ri) and it covers all integer points jj such that li\xe2\x89\xa4j\xe2\x89\xa4rili\xe2\x89\xa4j\xe2\x89\xa4ri.'
b'The integer point is called bad if it is covered by strictly more than kk segments.'
b'Your task is to remove the minimum number of segments so that there are no bad points at all.'
b'Input'
b'The first line of the input contains two integers nn and kk (1\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of segments and the maximum number of segments by which each integer point can be covered.'
b'The next nn lines contain segments. The ii-th line contains two integers lili and riri (1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the endpoints of the ii-th segment.'
b'Output'
b'In the first line print one integer mm (0\xe2\x89\xa4m\xe2\x89\xa4n0\xe2\x89\xa4m\xe2\x89\xa4n) \xe2\x80\x94 the minimum number of segments you need to remove so that there are no bad points.'
b'In the second line print mm distinct integers p1,p2,\xe2\x80\xa6,pmp1,p2,\xe2\x80\xa6,pm (1\xe2\x89\xa4pi\xe2\x89\xa4n1\xe2\x89\xa4pi\xe2\x89\xa4n) \xe2\x80\x94 indices of segments you remove in any order. If there are multiple answers, you can print any of them.'
Tags
data structures, greedy, sortings, *1800
