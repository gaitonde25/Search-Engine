b'You are given two positive integers xx and yy. You can perform the following operation with xx: write it in its binary form without leading zeros, add 00 or 11 to the right of it, reverse the binary form and turn it into a decimal number which is assigned as the new value of xx.'
b'For example: '
b'  3434 can be turned into 8181 via one operation: the binary form of 3434 is 100010100010, if you add 11, reverse it and remove leading zeros, you will get 10100011010001, which is the binary form of 8181.  3434 can be turned into 1717 via one operation: the binary form of 3434 is 100010100010, if you add 00, reverse it and remove leading zeros, you will get 1000110001, which is the binary form of 1717.  8181 can be turned into 6969 via one operation: the binary form of 8181 is 10100011010001, if you add 00, reverse it and remove leading zeros, you will get 10001011000101, which is the binary form of 6969.  3434 can be turned into 6969 via two operations: first you turn 3434 into 8181 and then 8181 into 6969. '
b'Your task is to find out whether xx can be turned into yy after a certain number of operations (possibly zero).'
b'Input'
b'The only line of the input contains two integers xx and yy (1\xe2\x89\xa4x,y\xe2\x89\xa410181\xe2\x89\xa4x,y\xe2\x89\xa41018).'
b'Output'
b"Print YES if you can make xx equal to yy and NO if you can't."
Tags
bitmasks, constructive algorithms, dfs and similar, implementation, math, strings, *2000
