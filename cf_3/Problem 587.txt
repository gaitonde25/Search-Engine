b'Recently, Petya learned about a new game "Slay the Dragon". As the name suggests, the player will have to fight with dragons. To defeat a dragon, you have to kill it and defend your castle. To do this, the player has a squad of nn heroes, the strength of the ii-th hero is equal to aiai.'
b"According to the rules of the game, exactly one hero should go kill the dragon, all the others will defend the castle. If the dragon's defense is equal to xx, then you have to send a hero with a strength of at least xx to kill it. If the dragon's attack power is yy, then the total strength of the heroes defending the castle should be at least yy."
b'The player can increase the strength of any hero by 11 for one gold coin. This operation can be done any number of times.'
b'There are mm dragons in the game, the ii-th of them has defense equal to xixi and attack power equal to yiyi. Petya was wondering what is the minimum number of coins he needs to spend to defeat the ii-th dragon.'
b'Note that the task is solved independently for each dragon (improvements are not saved).'
b'Input'
b'The first line contains a single integer nn (2\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851052\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105)\xc2\xa0\xe2\x80\x94 number of heroes.'
b'The second line contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa410121\xe2\x89\xa4ai\xe2\x89\xa41012), where aiai is the strength of the ii-th hero.'
b'The third line contains a single integer mm (1\xe2\x89\xa4m\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4m\xe2\x89\xa42\xe2\x8b\x85105)\xc2\xa0\xe2\x80\x94 the number of dragons.'
b'The next mm lines contain two integers each, xixi and yiyi (1\xe2\x89\xa4xi\xe2\x89\xa41012;1\xe2\x89\xa4yi\xe2\x89\xa410181\xe2\x89\xa4xi\xe2\x89\xa41012;1\xe2\x89\xa4yi\xe2\x89\xa41018)\xc2\xa0\xe2\x80\x94 defense and attack power of the ii-th dragon.'
b'Output'
b'Print mm lines, ii-th of which contains a single integer\xc2\xa0\xe2\x80\x94 the minimum number of coins that should be spent to defeat the ii-th dragon.'
Tags
binary search, greedy, sortings, ternary search, *1300
