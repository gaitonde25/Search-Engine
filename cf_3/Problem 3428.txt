b"You are given a bracket sequence ss (not necessarily a regular one). A bracket sequence is a string containing only characters '(' and ')'."
b'A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters \'1\' and \'+\' between the original characters of the sequence. For example, bracket sequences "()()" and "(())" are regular (the resulting expressions are: "(1)+(1)" and "((1+1)+1)"), and ")(", "(" and ")" are not.'
b'Your problem is to calculate the number of regular bracket sequences of length 2n2n containing the given bracket sequence ss as a substring (consecutive sequence of characters) modulo 109+7109+7 (10000000071000000007).'
b'Input'
b'The first line of the input contains one integer nn (1\xe2\x89\xa4n\xe2\x89\xa41001\xe2\x89\xa4n\xe2\x89\xa4100) \xe2\x80\x94 the half-length of the resulting regular bracket sequences (the resulting sequences must have length equal to 2n2n).'
b'The second line of the input contains one string ss (1\xe2\x89\xa4|s|\xe2\x89\xa42001\xe2\x89\xa4|s|\xe2\x89\xa4200) \xe2\x80\x94 the string ss that should be a substring in each of the resulting regular bracket sequences (|s||s| is the length of ss).'
b'Output'
b'Print only one integer \xe2\x80\x94 the number of regular bracket sequences containing the given bracket sequence ss as a substring. Since this number can be huge, print it modulo 109+7109+7 (10000000071000000007).'
Tags
dp, strings, *2300
