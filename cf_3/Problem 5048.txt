b'Bearland has n cities, numbered 1 through n. Cities are connected via bidirectional roads. Each road connects two distinct cities. No two roads connect the same pair of cities.'
b'Bear Limak was once in a city a and he wanted to go to a city b. There was no direct connection so he decided to take a long walk, visiting each city exactly once. Formally: '
b'  There is no road between a and b.  There exists a sequence (path) of n distinct cities v1,\xe2\x80\x89v2,\xe2\x80\x89...,\xe2\x80\x89vn that v1\xe2\x80\x89=\xe2\x80\x89a, vn\xe2\x80\x89=\xe2\x80\x89b and there is a road between vi and vi\xe2\x80\x89+\xe2\x80\x891 for . '
b'On the other day, the similar thing happened. Limak wanted to travel between a city c and a city d. There is no road between them but there exists a sequence of n distinct cities u1,\xe2\x80\x89u2,\xe2\x80\x89...,\xe2\x80\x89un that u1\xe2\x80\x89=\xe2\x80\x89c, un\xe2\x80\x89=\xe2\x80\x89d and there is a road between ui and ui\xe2\x80\x89+\xe2\x80\x891 for .'
b'Also, Limak thinks that there are at most k roads in Bearland. He wonders whether he remembers everything correctly.'
b"Given n, k and four distinct cities a, b, c, d, can you find possible paths (v1,\xe2\x80\x89...,\xe2\x80\x89vn) and (u1,\xe2\x80\x89...,\xe2\x80\x89un) to satisfy all the given conditions? Find any solution or print -1 if it's impossible."
b'Input'
b'The first line of the input contains two integers n and k (4\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000, n\xe2\x80\x89-\xe2\x80\x891\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892n\xe2\x80\x89-\xe2\x80\x892)\xc2\xa0\xe2\x80\x94 the number of cities and the maximum allowed number of roads, respectively.'
b'The second line contains four distinct integers a, b, c and d (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89a,\xe2\x80\x89b,\xe2\x80\x89c,\xe2\x80\x89d\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n).'
b'Output'
b"Print -1 if it's impossible to satisfy all the given conditions. Otherwise, print two lines with paths descriptions. The first of these two lines should contain n distinct integers v1,\xe2\x80\x89v2,\xe2\x80\x89...,\xe2\x80\x89vn where v1\xe2\x80\x89=\xe2\x80\x89a and vn\xe2\x80\x89=\xe2\x80\x89b. The second line should contain n distinct integers u1,\xe2\x80\x89u2,\xe2\x80\x89...,\xe2\x80\x89un where u1\xe2\x80\x89=\xe2\x80\x89c and un\xe2\x80\x89=\xe2\x80\x89d."
b'Two paths generate at most 2n\xe2\x80\x89-\xe2\x80\x892 roads: (v1,\xe2\x80\x89v2),\xe2\x80\x89(v2,\xe2\x80\x89v3),\xe2\x80\x89...,\xe2\x80\x89(vn\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89vn),\xe2\x80\x89(u1,\xe2\x80\x89u2),\xe2\x80\x89(u2,\xe2\x80\x89u3),\xe2\x80\x89...,\xe2\x80\x89(un\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89un). Your answer will be considered wrong if contains more than k distinct roads or any other condition breaks. Note that (x,\xe2\x80\x89y) and (y,\xe2\x80\x89x) are the same road.'
Tags
constructive algorithms, graphs, *1600
