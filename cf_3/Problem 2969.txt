b'Reading books is one of Sasha\'s passions. Once while he was reading one book, he became acquainted with an unusual character. The character told about himself like that: "Many are my names in many countries. Mithrandir among the Elves, Thark\xc3\xbbn to the Dwarves, Ol\xc3\xb3rin I was in my youth in the West that is forgotten, in the South Inc\xc3\xa1nus, in the North Gandalf; to the East I go not."'
b'And at that moment Sasha thought, how would that character be called in the East? In the East all names are palindromes. A string is a palindrome if it reads the same backward as forward. For example, such strings as "kazak", "oo" and "r" are palindromes, but strings "abb" and "ij" are not. '
b"Sasha believed that the hero would be named after one of the gods of the East. As long as there couldn't be two equal names, so in the East people did the following: they wrote the original name as a string on a piece of paper, then cut the paper minimum number of times kk, so they got k+1k+1 pieces of paper with substrings of the initial string, and then unite those pieces together to get a new string. Pieces couldn't be turned over, they could be shuffled."
b"In this way, it's possible to achive a string abcdefg from the string f|de|abc|g using 33 cuts (by swapping papers with substrings f and abc). The string cbadefg can't be received using the same cuts."
b'More formally, Sasha wants for the given palindrome ss find such minimum kk, that you can cut this string into k+1k+1 parts, and then unite them in such a way that the final string will be a palindrome and it won\'t be equal to the initial string ss. It there is no answer, then print "Impossible" (without quotes).'
b'Input'
b'The first line contains one string ss (1\xe2\x89\xa4|s|\xe2\x89\xa450001\xe2\x89\xa4|s|\xe2\x89\xa45000)\xc2\xa0\xe2\x80\x94 the initial name, which consists only of lowercase Latin letters. It is guaranteed that ss is a palindrome.'
b'Output'
b'Print one integer kk\xc2\xa0\xe2\x80\x94 the minimum number of cuts needed to get a new name, or "Impossible" (without quotes).'
Tags
constructive algorithms, hashing, strings, *1800
