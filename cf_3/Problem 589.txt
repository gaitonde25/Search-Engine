b'A bracket sequence is a string containing only characters "(" and ")". A regular bracket sequence is a bracket sequence that can be transformed into a correct arithmetic expression by inserting characters "1" and "+" between the original characters of the sequence. For example, bracket sequences "()()" and "(())" are regular (the resulting expressions are: "(1)+(1)" and "((1+1)+1)"), and ")(", "(" and ")" are not.'
b'You are given an integer nn. Your goal is to construct and print exactly nn different regular bracket sequences of length 2n2n.'
b'Input'
b'The first line contains one integer tt (1\xe2\x89\xa4t\xe2\x89\xa4501\xe2\x89\xa4t\xe2\x89\xa450) \xe2\x80\x94 the number of test cases.'
b'Each test case consists of one line containing one integer nn (1\xe2\x89\xa4n\xe2\x89\xa4501\xe2\x89\xa4n\xe2\x89\xa450).'
b'Output'
b"For each test case, print nn lines, each containing a regular bracket sequence of length exactly 2n2n. All bracket sequences you output for a testcase should be different (though they may repeat in different test cases). If there are multiple answers, print any of them. It can be shown that it's always possible."
Tags
constructive algorithms, *800
