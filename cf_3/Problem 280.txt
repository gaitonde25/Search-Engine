b'Given an array aa of nn integers, find a range of values [x,y][x,y] (x\xe2\x89\xa4yx\xe2\x89\xa4y), and split aa into exactly kk (1\xe2\x89\xa4k\xe2\x89\xa4n1\xe2\x89\xa4k\xe2\x89\xa4n) subarrays in such a way that:'
b'  Each subarray is formed by several continuous elements of aa, that is, it is equal to al,al+1,\xe2\x80\xa6,aral,al+1,\xe2\x80\xa6,ar for some ll and rr (1\xe2\x89\xa4l\xe2\x89\xa4r\xe2\x89\xa4n1\xe2\x89\xa4l\xe2\x89\xa4r\xe2\x89\xa4n).  Each element from aa belongs to exactly one subarray.  In each subarray the number of elements inside the range [x,y][x,y] (inclusive) is strictly greater than the number of elements outside the range. An element with index ii is inside the range [x,y][x,y] if and only if x\xe2\x89\xa4ai\xe2\x89\xa4yx\xe2\x89\xa4ai\xe2\x89\xa4y. '
b' '
b'Print any solution that minimizes y\xe2\x88\x92xy\xe2\x88\x92x.'
b'Input'
b'The input consists of multiple test cases. The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa43\xe2\x8b\x851041\xe2\x89\xa4t\xe2\x89\xa43\xe2\x8b\x85104) \xe2\x80\x94 the number of test cases. Description of the test cases follows.'
b'The first line of each test case contains two integers nn and kk (1\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the length of the array aa and the number of subarrays required in the partition.'
b'The second line of each test case contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa4n1\xe2\x89\xa4ai\xe2\x89\xa4n) where aiai is the ii-th element of the array.'
b'It is guaranteed that the sum of nn over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.'
b'Output'
b'For each test case, print k+1k+1 lines.'
b'In the first line, print xx and yy \xe2\x80\x94 the limits of the found range.'
b'Then print kk lines, the ii-th should contain lili and riri (1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa4n1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa4n) \xe2\x80\x94 the limits of the ii-th subarray.'
b'You can print the subarrays in any order.'
Tags
binary search, constructive algorithms, data structures, greedy, two pointers, *1800
