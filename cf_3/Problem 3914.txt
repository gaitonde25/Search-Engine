b"Let's suppose you have an array a, a stack s (initially empty) and an array b (also initially empty)."
b'You may perform the following operations until both a and s are empty:'
b'  Take the first element of a, push it into s and remove it from a (if a is not empty);  Take the top element from s, append it to the end of array b and remove it from s (if s is not empty). '
b'You can perform these operations in arbitrary order.'
b'If there exists a way to perform the operations such that array b is sorted in non-descending order in the end, then array a is called stack-sortable.'
b'For example, [3,\xe2\x80\x891,\xe2\x80\x892] is stack-sortable, because b will be sorted if we perform the following operations:'
b'  Remove 3 from a and push it into s;  Remove 1 from a and push it into s;  Remove 1 from s and append it to the end of b;  Remove 2 from a and push it into s;  Remove 2 from s and append it to the end of b;  Remove 3 from s and append it to the end of b. '
b'After all these operations b\xe2\x80\x89=\xe2\x80\x89[1,\xe2\x80\x892,\xe2\x80\x893], so [3,\xe2\x80\x891,\xe2\x80\x892] is stack-sortable. [2,\xe2\x80\x893,\xe2\x80\x891] is not stack-sortable.'
b'You are given k first elements of some permutation p of size n (recall that a permutation of size n is an array of size n where each integer from 1 to n occurs exactly once). You have to restore the remaining n\xe2\x80\x89-\xe2\x80\x89k elements of this permutation so it is stack-sortable. If there are multiple answers, choose the answer such that p is lexicographically maximal (an array q is lexicographically greater than an array p iff there exists some integer k such that for every i\xe2\x80\x89<\xe2\x80\x89k qi\xe2\x80\x89=\xe2\x80\x89pi, and qk\xe2\x80\x89>\xe2\x80\x89pk). You may not swap or change any of first k elements of the permutation.'
b'Print the lexicographically maximal permutation p you can obtain.'
b'If there exists no answer then output -1.'
b'Input'
b'The first line contains two integers n and k (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89200000, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89<\xe2\x80\x89n) \xe2\x80\x94 the size of a desired permutation, and the number of elements you are given, respectively.'
b'The second line contains k integers p1, p2, ..., pk (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89pi\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) \xe2\x80\x94 the first k elements of p. These integers are pairwise distinct.'
b'Output'
b'If it is possible to restore a stack-sortable permutation p of size n such that the first k elements of p are equal to elements given in the input, print lexicographically maximal such permutation.'
b'Otherwise print -1.'
Tags
constructive algorithms, data structures, greedy, implementation, *2000
