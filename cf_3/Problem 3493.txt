b'Implement a quantum oracle on N qubits which implements the following function: '
b''
b'Here  (a vector of N integers, each of which can be 0 or 1), and  is a vector of N 1s.'
b'For an explanation on how this type of quantum oracles works, see Introduction to quantum oracles.'
b'You have to implement an operation which takes the following inputs:'
b' an array of N qubits x in arbitrary state (input register), 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x898, a qubit y in arbitrary state (output qubit), an array of N integers b, representing the vector . Each element of b will be 0 or 1.'
b'The operation doesn\'t have an output; its "output" is the state in which it leaves the qubits.'
b'Your code should have the following signature:'
b'namespace Solution {    open Microsoft.Quantum.Primitive;    open Microsoft.Quantum.Canon;    operation Solve (x : Qubit[], y : Qubit, b : Int[]) : ()    {        body        {            // your code here        }    }}'
Tags
*1300
