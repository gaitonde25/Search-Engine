b'You are given two arrays aa and bb both consisting of nn positive (greater than zero) integers. You are also given an integer kk.'
b'In one move, you can choose two indices ii and jj (1\xe2\x89\xa4i,j\xe2\x89\xa4n1\xe2\x89\xa4i,j\xe2\x89\xa4n) and swap aiai and bjbj (i.e. aiai becomes bjbj and vice versa). Note that ii and jj can be equal or different (in particular, swap a2a2 with b2b2 or swap a3a3 and b9b9 both are acceptable moves).'
b'Your task is to find the maximum possible sum you can obtain in the array aa if you can do no more than (i.e. at most) kk such moves (swaps).'
b'You have to answer tt independent test cases.'
b'Input'
b'The first line of the input contains one integer tt (1\xe2\x89\xa4t\xe2\x89\xa42001\xe2\x89\xa4t\xe2\x89\xa4200) \xe2\x80\x94 the number of test cases. Then tt test cases follow.'
b'The first line of the test case contains two integers nn and kk (1\xe2\x89\xa4n\xe2\x89\xa430;0\xe2\x89\xa4k\xe2\x89\xa4n1\xe2\x89\xa4n\xe2\x89\xa430;0\xe2\x89\xa4k\xe2\x89\xa4n) \xe2\x80\x94 the number of elements in aa and bb and the maximum number of moves you can do. The second line of the test case contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa4301\xe2\x89\xa4ai\xe2\x89\xa430), where aiai is the ii-th element of aa. The third line of the test case contains nn integers b1,b2,\xe2\x80\xa6,bnb1,b2,\xe2\x80\xa6,bn (1\xe2\x89\xa4bi\xe2\x89\xa4301\xe2\x89\xa4bi\xe2\x89\xa430), where bibi is the ii-th element of bb.'
b'Output'
b'For each test case, print the answer \xe2\x80\x94 the maximum possible sum you can obtain in the array aa if you can do no more than (i.e. at most) kk swaps.'
Tags
greedy, sortings, *800
