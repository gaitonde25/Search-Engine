b"You have an integer nn. Let's define following tree generation as McDic's generation:"
b"  Make a complete and full binary tree of 2n\xe2\x88\x9212n\xe2\x88\x921 vertices. Complete and full binary tree means a tree that exactly one vertex is a root, all leaves have the same depth (distance from the root), and all non-leaf nodes have exactly two child nodes.  Select a non-root vertex vv from that binary tree.  Remove vv from tree and make new edges between vv's parent and vv's direct children. If vv has no children, then no new edges will be made. "
b"You have a tree. Determine if this tree can be made by McDic's generation. If yes, then find the parent vertex of removed vertex in tree."
b'Input'
b'The first line contains integer nn (2\xe2\x89\xa4n\xe2\x89\xa4172\xe2\x89\xa4n\xe2\x89\xa417).'
b'The ii-th of the next 2n\xe2\x88\x9232n\xe2\x88\x923 lines contains two integers aiai and bibi (1\xe2\x89\xa4ai<bi\xe2\x89\xa42n\xe2\x88\x9221\xe2\x89\xa4ai<bi\xe2\x89\xa42n\xe2\x88\x922)\xc2\xa0\xe2\x80\x94 meaning there is an edge between aiai and bibi. It is guaranteed that the given edges form a tree.'
b'Output'
b'Print two lines.'
b"In the first line, print a single integer\xc2\xa0\xe2\x80\x94 the number of answers. If given tree cannot be made by McDic's generation, then print 00."
b"In the second line, print all possible answers in ascending order, separated by spaces. If the given tree cannot be made by McDic's generation, then don't print anything."
Tags
constructive algorithms, implementation, trees, *2500
