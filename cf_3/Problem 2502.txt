b'You have a string ss \xe2\x80\x94 a sequence of commands for your toy robot. The robot is placed in some cell of a rectangular grid. He can perform four commands:'
b"  'W' \xe2\x80\x94 move one cell up;  'S' \xe2\x80\x94 move one cell down;  'A' \xe2\x80\x94 move one cell left;  'D' \xe2\x80\x94 move one cell right. "
b'Let Grid(s)Grid(s) be the grid of minimum possible area such that there is a position in the grid where you can place the robot in such a way that it will not fall from the grid while running the sequence of commands ss. For example, if s=DSAWWAWs=DSAWWAW then Grid(s)Grid(s) is the 4\xc3\x9734\xc3\x973 grid:'
b"  you can place the robot in the cell (3,2)(3,2);  the robot performs the command 'D' and moves to (3,3)(3,3);  the robot performs the command 'S' and moves to (4,3)(4,3);  the robot performs the command 'A' and moves to (4,2)(4,2);  the robot performs the command 'W' and moves to (3,2)(3,2);  the robot performs the command 'W' and moves to (2,2)(2,2);  the robot performs the command 'A' and moves to (2,1)(2,1);  the robot performs the command 'W' and moves to (1,1)(1,1). "
b'  '
b"You have 44 extra letters: one 'W', one 'A', one 'S', one 'D'. You'd like to insert at most one of these letters in any position of sequence ss to minimize the area of Grid(s)Grid(s)."
b'What is the minimum area of Grid(s)Grid(s) you can achieve?'
b'Input'
b'The first line contains one integer TT (1\xe2\x89\xa4T\xe2\x89\xa410001\xe2\x89\xa4T\xe2\x89\xa41000) \xe2\x80\x94 the number of queries.'
b'Next TT lines contain queries: one per line. This line contains single string ss (1\xe2\x89\xa4|s|\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4|s|\xe2\x89\xa42\xe2\x8b\x85105, si\xe2\x88\x88{W,A,S,D}si\xe2\x88\x88{W,A,S,D}) \xe2\x80\x94 the sequence of commands.'
b"It's guaranteed that the total length of ss over all queries doesn't exceed 2\xe2\x8b\x851052\xe2\x8b\x85105."
b'Output'
b'Print TT integers: one per query. For each query print the minimum area of Grid(s)Grid(s) you can achieve.'
Tags
brute force, data structures, dp, greedy, implementation, math, strings, *2100
