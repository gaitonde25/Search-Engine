b'You are given a tree consisting of nn vertices (numbered from 11 to nn) and n\xe2\x88\x921n\xe2\x88\x921 edges (numbered from 11 to n\xe2\x88\x921n\xe2\x88\x921). Initially, all vertices except vertex 11 are inactive.'
b'You have to process queries of three types:'
b'  11 vv \xe2\x80\x94 activate the vertex vv. It is guaranteed that the vertex vv is inactive before this query, and one of its neighbors is active. After activating the vertex, you have to choose a subset of edges of the tree such that each active vertex is incident to exactly one chosen edge, and each inactive vertex is not incident to any of the chosen edges \xe2\x80\x94 in other words, this subset should represent a perfect matching on the active part of the tree. If any such subset of edges exists, print the sum of indices of edges in it; otherwise, print 00.  22 \xe2\x80\x94 queries of this type will be asked only right after a query of type 11, and there will be at most 1010 such queries. If your answer to the previous query was 00, simply print 00; otherwise, print the subset of edges for the previous query as follows: first, print the number of edges in the subset, then print the indices of the chosen edges in ascending order. The sum of indices should be equal to your answer to the previous query.  33 \xe2\x80\x94 terminate the program. '
b"Note that you should solve the problem in online mode. It means that you can't read the whole input at once. You can read each query only after writing the answer for the last query. Use functions fflush in C++ and BufferedWriter.flush in Java languages after each writing in your program."
b'Input'
b'The first line contains one integer nn (2\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851052\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of vertices of the tree.'
b'Then n\xe2\x88\x921n\xe2\x88\x921 lines follow. The ii-th line contains two integers uiui and vivi (1\xe2\x89\xa4ui,vi\xe2\x89\xa4n1\xe2\x89\xa4ui,vi\xe2\x89\xa4n; ui\xe2\x89\xa0viui\xe2\x89\xa0vi) \xe2\x80\x94 the endpoints of the ii-th edge. These edges form a tree.'
b'Then the queries follow in the format described in the statement, one line per query. There will be at least 22 and at most n+10n+10 queries. The last query (and only the last one) will be of type 33. Note that you can read the ii-th query only if you have already given the answer for the query i\xe2\x88\x921i\xe2\x88\x921 (except for i=1i=1).'
b'If your answer for one of the queries is incorrect and the judging program recognizes it, instead of the next query, you may receive the integer 00 on a separate line. After receiving it, your program should terminate gracefully, and you will receive "Wrong Answer" verdict. If your program doesn\'t terminate, your solution may receive some other verdict, like "Time Limit Exceeded", "Idleness Limit Exceeded", etc. Note that the fact that your solution doesn\'t receive the integer 00, it does not mean that all your answers are correct, some of them will be checked only after your program is terminated.'
b'Output'
b"For each query of type 11 or 22, print the answer on a separate line as described in the statement. Don't forget to flush the output."
Tags
data structures, divide and conquer, interactive, trees, *2800
