b'A row of nn cells is given, all initially white. Using a stamp, you can stamp any two neighboring cells such that one becomes red and the other becomes blue. A stamp can be rotated, i.e. it can be used in both ways: as BRBR and as RBRB.'
b'During use, the stamp must completely fit on the given nn cells (it cannot be partially outside the cells). The stamp can be applied multiple times to the same cell. Each usage of the stamp recolors both cells that are under the stamp.'
b'For example, one possible sequence of stamps to make the picture BRBBWBRBBW could be WWWWW\xe2\x86\x92WWRB\xe2\x80\x93\xe2\x80\x93\xe2\x80\x93W\xe2\x86\x92BR\xe2\x80\x93\xe2\x80\x93\xe2\x80\x93RBW\xe2\x86\x92BRB\xe2\x80\x93\xe2\x80\x93\xe2\x80\x93BWWWWWW\xe2\x86\x92WWRB_W\xe2\x86\x92BR_RBW\xe2\x86\x92BRB_BW. Here WW, RR, and BB represent a white, red, or blue cell, respectively, and the cells that the stamp is used on are marked with an underline.'
b'Given a final picture, is it possible to make it using the stamp zero or more times?'
b'Input'
b'The first line contains an integer tt (1\xe2\x89\xa4t\xe2\x89\xa41041\xe2\x89\xa4t\xe2\x89\xa4104)\xc2\xa0\xe2\x80\x94 the number of test cases.'
b'The first line of each test case contains an integer nn (1\xe2\x89\xa4n\xe2\x89\xa41051\xe2\x89\xa4n\xe2\x89\xa4105)\xc2\xa0\xe2\x80\x94 the length of the picture.'
b'The second line of each test case contains a string ss\xc2\xa0\xe2\x80\x94 the picture you need to make. It is guaranteed that the length of ss is nn and that ss only consists of the characters WW, RR, and BB, representing a white, red, or blue cell, respectively.'
b'It is guaranteed that the sum of nn over all test cases does not exceed 105105.'
b'Output'
b'Output tt lines, each of which contains the answer to the corresponding test case. As an answer, output "YES" if it possible to make the picture using the stamp zero or more times, and "NO" otherwise.'
b'You can output the answer in any case (for example, the strings "yEs", "yes", "Yes" and "YES" will be recognized as a positive answer).'
Tags
implementation, *1100
