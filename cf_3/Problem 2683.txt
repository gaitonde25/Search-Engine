b'Every day Kotlin heroes analyze the statistics of their website. For nn days, they wrote out nn numbers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an, where aiai is the number of visits on the ii-th day.'
b'They believe that a day is bad if there are at least 22 days before it with a strictly greater number of visits. For example, if n=8n=8 and a=[3,1,4,1,5,9,2,6]a=[3,1,4,1,5,9,2,6], then the day 44 is bad (because a4=1a4=1, but there are a1=3a1=3 and a3=4a3=4). Also, the day with the number 77 is bad too.'
b'Write a program that finds the number of bad days.'
b'Input'
b'The first line contains an integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105), where nn is the number of days. The second line contains nn positive integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa41091\xe2\x89\xa4ai\xe2\x89\xa4109), where aiai is the number of website visits on the ii-th day.'
b'Output'
b'Print the number of bad days, i.e. such days that there are at least two days before it with a strictly greater number of visits.'
Tags
*special problem, implementation
