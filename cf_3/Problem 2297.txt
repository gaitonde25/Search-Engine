b'This problem is different from the easy version. In this version Ujan makes at most 2n2n swaps. In addition, k\xe2\x89\xa41000,n\xe2\x89\xa450k\xe2\x89\xa41000,n\xe2\x89\xa450 and it is necessary to print swaps themselves. You can hack this problem if you solve it. But you can hack the previous problem only if you solve both problems.'
b'After struggling and failing many times, Ujan decided to try to clean up his house again. He decided to get his strings in order first.'
b'Ujan has two distinct strings ss and tt of length nn consisting of only of lowercase English characters. He wants to make them equal. Since Ujan is lazy, he will perform the following operation at most 2n2n times: he takes two positions ii and jj (1\xe2\x89\xa4i,j\xe2\x89\xa4n1\xe2\x89\xa4i,j\xe2\x89\xa4n, the values ii and jj can be equal or different), and swaps the characters sisi and tjtj.'
b"Ujan's goal is to make the strings ss and tt equal. He does not need to minimize the number of performed operations: any sequence of operations of length 2n2n or shorter is suitable."
b'Input'
b'The first line contains a single integer kk (1\xe2\x89\xa4k\xe2\x89\xa410001\xe2\x89\xa4k\xe2\x89\xa41000), the number of test cases.'
b'For each of the test cases, the first line contains a single integer nn (2\xe2\x89\xa4n\xe2\x89\xa4502\xe2\x89\xa4n\xe2\x89\xa450), the length of the strings ss and tt. '
b'Each of the next two lines contains the strings ss and tt, each having length exactly nn. The strings consist only of lowercase English letters. It is guaranteed that strings are different.'
b'Output'
b'For each test case, output "Yes" if Ujan can make the two strings equal with at most 2n2n operations and "No" otherwise. You can print each letter in any case (upper or lower).'
b'In the case of "Yes" print mm (1\xe2\x89\xa4m\xe2\x89\xa42n1\xe2\x89\xa4m\xe2\x89\xa42n) on the next line, where mm is the number of swap operations to make the strings equal. Then print mm lines, each line should contain two integers i,ji,j (1\xe2\x89\xa4i,j\xe2\x89\xa4n1\xe2\x89\xa4i,j\xe2\x89\xa4n) meaning that Ujan swaps sisi and tjtj during the corresponding operation. You do not need to minimize the number of operations. Any sequence of length not more than 2n2n is suitable.'
Tags
strings, *1600
