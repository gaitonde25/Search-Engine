b'You are given an array of n integer numbers. Let sum(l,\xe2\x80\x89r) be the sum of all numbers on positions from l to r non-inclusive (l-th element is counted, r-th element is not counted). For indices l and r holds 0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n. Indices in array are numbered from 0. '
b'For example, if a\xe2\x80\x89=\xe2\x80\x89[\xe2\x80\x89-\xe2\x80\x895,\xe2\x80\x893,\xe2\x80\x899,\xe2\x80\x894], then sum(0,\xe2\x80\x891)\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x895, sum(0,\xe2\x80\x892)\xe2\x80\x89=\xe2\x80\x89\xe2\x80\x89-\xe2\x80\x892, sum(1,\xe2\x80\x894)\xe2\x80\x89=\xe2\x80\x8916 and sum(i,\xe2\x80\x89i)\xe2\x80\x89=\xe2\x80\x890 for each i from 0 to 4.'
b'Choose the indices of three delimiters delim0, delim1, delim2 (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89delim0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89delim1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89delim2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) and divide the array in such a way that the value of res\xe2\x80\x89=\xe2\x80\x89sum(0,\xe2\x80\x89delim0) - sum(delim0,\xe2\x80\x89delim1) + sum(delim1,\xe2\x80\x89delim2) - sum(delim2,\xe2\x80\x89n) is maximal. '
b'Note that some of the expressions sum(l,\xe2\x80\x89r) can correspond to empty segments (if l\xe2\x80\x89=\xe2\x80\x89r for some segment).'
b'Input'
b'The first line contains one integer number n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895000).'
b'The second line contains n numbers a0,\xe2\x80\x89a1,\xe2\x80\x89...,\xe2\x80\x89an\xe2\x80\x89-\xe2\x80\x891 (\xe2\x80\x89-\xe2\x80\x89109\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89109).'
b'Output'
b'Choose three indices so that the value of res is maximal. If there are multiple answers, print any of them.'
Tags
brute force, data structures, dp, *1800
