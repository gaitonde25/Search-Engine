b'Jamie loves sleeping. One day, he decides that he needs to wake up at exactly hh:\xe2\x80\x89mm. However, he hates waking up, so he wants to make waking up less painful by setting the alarm at a lucky time. He will then press the snooze button every x minutes until hh:\xe2\x80\x89mm is reached, and only then he will wake up. He wants to know what is the smallest number of times he needs to press the snooze button.'
b"A time is considered lucky if it contains a digit '7'. For example, 13:\xe2\x80\x8907 and 17:\xe2\x80\x8927 are lucky, while 00:\xe2\x80\x8948 and 21:\xe2\x80\x8934 are not lucky."
b'Note that it is not necessary that the time set for the alarm and the wake-up time are on the same day. It is guaranteed that there is a lucky time Jamie can set so that he can wake at hh:\xe2\x80\x89mm.'
b"Formally, find the smallest possible non-negative integer y such that the time representation of the time x\xc2\xb7y minutes before hh:\xe2\x80\x89mm contains the digit '7'."
b'Jamie uses 24-hours clock, so after 23:\xe2\x80\x8959 comes 00:\xe2\x80\x8900.'
b'Input'
b'The first line contains a single integer x (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8960).'
b'The second line contains two two-digit integers, hh and mm (00\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89hh\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8923,\xe2\x80\x8900\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89mm\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8959).'
b'Output'
b'Print the minimum number of times he needs to press the button.'
Tags
brute force, implementation, math, *900
