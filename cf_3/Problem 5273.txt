b'You are given a non-empty line s and an integer k. The following operation is performed with this line exactly once:'
b"  A line is split into at most k non-empty substrings, i.e. string s is represented as a concatenation of a set of strings s\xe2\x80\x89=\xe2\x80\x89t1\xe2\x80\x89+\xe2\x80\x89t2\xe2\x80\x89+\xe2\x80\x89...\xe2\x80\x89+\xe2\x80\x89tm, 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k.  Some of strings ti are replaced by strings tir, that is, their record from right to left.  The lines are concatenated back in the same order, we get string s'\xe2\x80\x89=\xe2\x80\x89t'1t'2... t'm, where t'i equals ti or tir. "
b'Your task is to determine the lexicographically smallest string that could be the result of applying the given operation to the string s.'
b'Input'
b'The first line of the input contains string s (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xe2\x80\x89000\xe2\x80\x89000), consisting of lowercase English letters. The second line contains integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89|s|)\xc2\xa0\xe2\x80\x94 the maximum number of parts in the partition.'
b'Output'
b"In the single line print the lexicographically minimum string s' which can be obtained as a result of performing the described operation. "
Tags
string suffix structures, strings, *3100
