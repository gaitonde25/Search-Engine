b'You have a robot in a two-dimensional labyrinth which consists of N\xe2\x80\x89\xc3\x97\xe2\x80\x89M cells. Some pairs of cells adjacent by side are separated by a wall or a door. The labyrinth itself is separated from the outside with walls around it. Some labyrinth cells are the exits. In order to leave the labyrinth the robot should reach any exit. There are keys in some cells. Any key can open any door but after the door is opened the key stays in the lock. Thus every key can be used only once. There are no labyrinth cells that contain both a key and an exit. Also there can not be both a wall and a door between the pair of adjacent cells.'
b'Your need to write a program in abc language (see the language description below) that will lead the robot to one of the exits. Lets numerate the labyrinth rows from 0 to N\xe2\x80\x89-\xe2\x80\x891 top to bottom and the columns \xe2\x80\x93 from 0 to M\xe2\x80\x89-\xe2\x80\x891 left to right.'
b'In abc language the following primary commands are available:'
b'  move-DIR \xe2\x80\x93 move to the adjacent cell in the  direction. down increases the number of the row by 1, right increases the number of the column by 1. In case there\xe2\x80\x99s a wall or a closed door in this direction, nothing\xe2\x80\x99s happening.  open-DIR \xe2\x80\x93 open the door between the current cell and the adjacent one in DIR direction. In case there isn\xe2\x80\x99t any door in this direction or it\xe2\x80\x99s already been opened or the robot doesn\xe2\x80\x99t have a key, nothing\xe2\x80\x99s happening. take \xe2\x80\x93 take the key in the current cell. In case there isn\xe2\x80\x99t any key or the robot has already picked it up, nothing\xe2\x80\x99s happening. The robot is able to carry any number of keys. terminate \xe2\x80\x93 terminate the program. This command is not obligatory to use. In case it\xe2\x80\x99s absent the command is added at the end of the program automatically. '
b'Also, there are the following control commands in abc language: '
b'  for-N OPS end \xe2\x80\x93 repeat the sequence of the OPS commands N times, 0\xe2\x80\x89<\xe2\x80\x89N\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100000. Each loop counter check counts as a command fulfilled by the robot.  if-ok  OPS1  else  OPS2  endif \xe2\x80\x93 carries out the sequence of the OPS1 commands, if the previous command of moving, taking the key or opening the door was successful, otherwise the sequence of the OPS2 commands is being carried out. Should there be no previous command run, the sequence OPS1 will be carried out. If-ok check counts as a command fulfilled by the robot.  break \xe2\x80\x93 stops the current for loop.  continue \xe2\x80\x93 finishes the current for loop iterations. '
b'Note that the control and the primary commands can be fit into each other arbitrarily.'
b'The robot will fulfill your commands sequentially until it exits the labyrinth, or it runs out of the commands, or the terminate command is run, or the quantity of the fulfilled commands exceeds the bound number 5\xc2\xb7106.'
b'In abc language each command is a separate word and should be separated from other commands with at least one space symbol.'
b'You should write a program that prints the sequence of commands leading the robot out of the labyrinth. Of course, as you are a good programmer, you should optimize these sequence.'
b'The number of the non-space symbols in the sequence should not exceed 107. If you succeed in finding the way out of the labyrinth i you\xe2\x80\x99ll be granted the number of points equal to: '
b''
b' where: '
b'  Wi \xe2\x80\x93 labyrinth\xe2\x80\x99s weight, some fixed constant.  Gi \xe2\x80\x93 number of robots moves.  Oi \xe2\x80\x93 number of fulfilled commands. Note that this number includes commands like take executed in the cells with no key, as well as opening commands applied to the already opened doors.  Li \xe2\x80\x93 sequence length in symbols, excluding space symbols and line breaks.  Q\xe2\x80\x89=\xe2\x80\x8910\xc2\xb7N\xc2\xb7M. '
b'In case your sequence doesn\xe2\x80\x99t lead the robot to the exit you\xe2\x80\x99ll be granted 0 points. Your programs result will be the sum of all Si. You should maximize this total sum.'
b'All labyrinths will be known and available to you. You can download the archive with labyrinths by any of the given links, password to extract files is aimtechiscool:'
b'  https://drive.google.com/file/d/1dkIBfW_Gy6c3FJtXjMXZPMsGKRyn3pzp  https://www.dropbox.com/s/77jrplnjgmviiwt/aimmaze.zip?dl=0  https://yadi.sk/d/JNXDLeH63RzaCi '
b'In order to make local testing of your programs more convenient, the program calculating your results (checker) and the labyrinth visualizer will be available. This program is written in python3 programming language, that\xe2\x80\x99s why you\xe2\x80\x99re going to need python3 interpreter, as well as pillow library, which you can install with the following command pip3 install pillow. pip3 is a utility program for python3 package (library) installation. It will be installed automatically with the python3 interpreter.'
b'Example command to run checker and visualizer: python3 aimmaze.py maze.in robot.abc --image maze.png. The checker can be run separately of visualization: python3 aimmaze.py maze.in robot.abc. Flag --output-log will let you see the information of robots each step: python3 aimmaze.py maze.in robot.abc --output-log. Note python3 can be installed as python on your computer.'
b'To adjust image settings, you can edit constants at the beginning of the program aimmaze.py.'
b'Input'
b'The first line contains integers i,\xe2\x80\x89\xc2\xa0W,\xe2\x80\x89\xc2\xa0N,\xe2\x80\x89\xc2\xa0M,\xe2\x80\x89\xc2\xa0x0,\xe2\x80\x89\xc2\xa0y0,\xe2\x80\x89\xc2\xa0C,\xe2\x80\x89\xc2\xa0D,\xe2\x80\x89\xc2\xa0K,\xe2\x80\x89\xc2\xa0E. '
b'  1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89i\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x8914 \xe2\x80\x93 labyrinth\xe2\x80\x99s number, which is needed for a checking program.  1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89W\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891018 \xe2\x80\x93 labyrinth\xe2\x80\x99s weight, which is needed for a checking program.  2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N,\xe2\x80\x89M\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000 \xe2\x80\x93 labyrinth\xe2\x80\x99s height and width.  0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89\xc2\xa00\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89M\xe2\x80\x89-\xe2\x80\x891 \xe2\x80\x93 robot\xe2\x80\x99s starting position (x0,\xe2\x80\x89y0).  0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89C\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x892\xc2\xb7NM \xe2\x80\x93 number of walls.  0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89D\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105 \xe2\x80\x93 number of doors.  0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89K\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105 \xe2\x80\x93 number of keys.  1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89E\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x891000 \xe2\x80\x93 number of exits. '
b'The x coordinate corresponds to the row number, y \xe2\x80\x93 to the column number. (0,\xe2\x80\x890) cell is located on the left-up corner, so that down direction increases the x coordinate, while right direction increases the y coordinate.'
b'Each of the next C lines contains 4 integers each x1,\xe2\x80\x89y1,\xe2\x80\x89x2,\xe2\x80\x89y2 \xe2\x80\x93 the coordinates of cells with a wall between them in a zero based indexing. It is guaranteed that |x1\xe2\x80\x89-\xe2\x80\x89x2|\xe2\x80\x89+\xe2\x80\x89|y1\xe2\x80\x89-\xe2\x80\x89y2|\xe2\x80\x89=\xe2\x80\x891,\xe2\x80\x89\xc2\xa00\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x1,\xe2\x80\x89x2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89N\xe2\x80\x89-\xe2\x80\x891,\xe2\x80\x89\xc2\xa00\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89y1,\xe2\x80\x89y2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89M\xe2\x80\x89-\xe2\x80\x891. Also there are always walls around the labyrinth\xe2\x80\x99s borders, which are not given in the labyrinths description.'
b'Each of the next D lines contains door description in the same format as walls description. It is guaranteed that doors and walls don\xe2\x80\x99t overlap.'
b'Each of the next K rows contains a pair of integer which are the key coordinates in a zero based indexing.'
b'Each of the next E rows contains a pair of integer which are the exit coordinates in a zero based indexing.'
b'It is guaranteed that the robots starting position as well as keys and exits are located in pairwise different cells.'
b'Output'
b'Print a program in abc language which passes the given labyrinth. Commands have to be separated by at least one space symbol. You can use arbitrary formatting for the program.'
Tags
*3200
