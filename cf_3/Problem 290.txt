b'Mihai has just learned about the MEX concept and since he liked it so much, he decided to use it right away.'
b'Given an array aa of nn non-negative integers, Mihai wants to create a new array bb that is formed in the following way:'
b'While aa is not empty: '
b'  Choose an integer kk (1\xe2\x89\xa4k\xe2\x89\xa4|a|1\xe2\x89\xa4k\xe2\x89\xa4|a|).  Append the MEX of the first kk numbers of the array aa to the end of array bb and erase them from the array aa, shifting the positions of the remaining numbers in aa. '
b'But, since Mihai loves big arrays as much as the MEX concept, he wants the new array bb to be the lexicographically maximum. So, Mihai asks you to tell him what the maximum array bb that can be created by constructing the array optimally is.'
b'An array xx is lexicographically greater than an array yy if in the first position where xx and yy differ xi>yixi>yi or if |x|>|y||x|>|y| and yy is a prefix of xx (where |x||x| denotes the size of the array xx).'
b'The MEX of a set of non-negative integers is the minimal non-negative integer such that it is not in the set. For example, MEX({1,2,31,2,3}) =0=0 and MEX({0,1,2,4,50,1,2,4,5}) =3=3.'
b'Input'
b'The first line of the input contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa41001\xe2\x89\xa4t\xe2\x89\xa4100) \xe2\x80\x94 the number of test cases. The description of test cases follows.'
b'The first line of each test case contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of elements in the array aa.'
b'The second line of each test case contains nn non-negative integers a1,\xe2\x80\xa6,ana1,\xe2\x80\xa6,an (0\xe2\x89\xa4ai\xe2\x89\xa4n0\xe2\x89\xa4ai\xe2\x89\xa4n), where aiai is the ii-th integer from the array aa.'
b'It is guaranteed that the sum of nn over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.'
b'Output'
b'For each test case print mm \xe2\x80\x94 the length of the maximum array bb Mihai can create, followed by mm integers denoting the elements of the array bb.'
Tags
binary search, constructive algorithms, greedy, implementation, math, two pointers, *1400
