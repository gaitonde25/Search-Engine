b'Vasya is an administrator of a public page of organization "Mouse and keyboard" and his everyday duty is to publish news from the world of competitive programming. For each news he also creates a list of hashtags to make searching for a particular topic more comfortable. For the purpose of this problem we define hashtag as a string consisting of lowercase English letters and exactly one symbol \'#\' located at the beginning of the string. The length of the hashtag is defined as the number of symbols in it without the symbol \'#\'.'
b'The head administrator of the page told Vasya that hashtags should go in lexicographical order (take a look at the notes section for the definition).'
b"Vasya is lazy so he doesn't want to actually change the order of hashtags in already published news. Instead, he decided to delete some suffixes (consecutive characters at the end of the string) of some of the hashtags. He is allowed to delete any number of characters, even the whole string except for the symbol '#'. Vasya wants to pick such a way to delete suffixes that the total number of deleted symbols is minimum possible. If there are several optimal solutions, he is fine with any of them."
b'Input'
b'The first line of the input contains a single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500\xe2\x80\x89000)\xc2\xa0\xe2\x80\x94 the number of hashtags being edited now.'
b'Each of the next n lines contains exactly one hashtag of positive length.'
b"It is guaranteed that the total length of all hashtags (i.e. the total length of the string except for characters '#') won't exceed 500\xe2\x80\x89000."
b'Output'
b'Print the resulting hashtags in any of the optimal solutions.'
Tags
binary search, greedy, implementation, strings, *1800
