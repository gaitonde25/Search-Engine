b"Let's call a positive integer good if there is no digit 0 in its decimal representation."
b'For an array of a good numbers aa, one found out that the sum of some two neighboring elements is equal to xx (i.e. x=ai+ai+1x=ai+ai+1 for some ii). xx had turned out to be a good number as well.'
b'Then the elements of the array aa were written out one after another without separators into one string ss. For example, if a=[12,5,6,133]a=[12,5,6,133], then s=1256133s=1256133.'
b'You are given a string ss and a number xx. Your task is to determine the positions in the string that correspond to the adjacent elements of the array that have sum xx. If there are several possible answers, you can print any of them.'
b'Input'
b'The first line contains the string ss (2\xe2\x89\xa4|s|\xe2\x89\xa45\xe2\x8b\x851052\xe2\x89\xa4|s|\xe2\x89\xa45\xe2\x8b\x85105).'
b'The second line contains an integer xx (2\xe2\x89\xa4x<102000002\xe2\x89\xa4x<10200000).'
b'An additional constraint on the input: the answer always exists, i.e you can always select two adjacent substrings of the string ss so that if you convert these substrings to integers, their sum is equal to xx.'
b'Output'
b'In the first line, print two integers l1l1, r1r1, meaning that the first term of the sum (aiai) is in the string ss from position l1l1 to position r1r1.'
b'In the second line, print two integers l2l2, r2r2, meaning that the second term of the sum (ai+1ai+1) is in the string ss from position l2l2 to position r2r2.'
Tags
hashing, math, string suffix structures, strings, *3200
