b"Boboniu defines BN-string as a string ss of characters 'B' and 'N'."
b'You can perform the following operations on the BN-string ss:'
b'  Remove a character of ss.  Remove a substring "BN" or "NB" of ss.  Add a character \'B\' or \'N\' to the end of ss.  Add a string "BN" or "NB" to the end of ss. '
b'Note that a string aa is a substring of a string bb if aa can be obtained from bb by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.'
b'Boboniu thinks that BN-strings ss and tt are similar if and only if:'
b'  |s|=|t||s|=|t|.  There exists a permutation p1,p2,\xe2\x80\xa6,p|s|p1,p2,\xe2\x80\xa6,p|s| such that for all ii (1\xe2\x89\xa4i\xe2\x89\xa4|s|1\xe2\x89\xa4i\xe2\x89\xa4|s|), spi=tispi=ti. '
b'Boboniu also defines dist(s,t)dist(s,t), the distance between ss and tt, as the minimum number of operations that makes ss similar to tt.'
b'Now Boboniu gives you nn non-empty BN-strings s1,s2,\xe2\x80\xa6,sns1,s2,\xe2\x80\xa6,sn and asks you to find a non-empty BN-string tt such that the maximum distance to string ss is minimized, i.e. you need to minimize maxni=1dist(si,t)maxi=1ndist(si,t).'
b'Input'
b'The first line contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa43\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa43\xe2\x8b\x85105).'
b"Each of the next nn lines contains a string sisi (1\xe2\x89\xa4|si|\xe2\x89\xa45\xe2\x8b\x851051\xe2\x89\xa4|si|\xe2\x89\xa45\xe2\x8b\x85105). It is guaranteed that sisi only contains 'B' and 'N'. The sum of |si||si| does not exceed 5\xe2\x8b\x851055\xe2\x8b\x85105."
b'Output'
b'In the first line, print the minimum maxni=1dist(si,t)maxi=1ndist(si,t).'
b'In the second line, print the suitable tt.'
b"If there are several possible tt's, you can print any."
Tags
binary search, geometry, ternary search, *2600
