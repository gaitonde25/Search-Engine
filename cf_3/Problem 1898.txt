b'This is the hard version of the problem. The difference is the constraint on the sum of lengths of strings and the number of test cases. You can make hacks only if you solve all versions of this task.'
b'You are given a string ss, consisting of lowercase English letters. Find the longest string, tt, which satisfies the following conditions: '
b'  The length of tt does not exceed the length of ss.  tt is a palindrome.  There exists two strings aa and bb (possibly empty), such that t=a+bt=a+b ( "++" represents concatenation), and aa is prefix of ss while bb is suffix of ss. '
b'Input'
b'The input consists of multiple test cases. The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa41051\xe2\x89\xa4t\xe2\x89\xa4105), the number of test cases. The next tt lines each describe a test case.'
b'Each test case is a non-empty string ss, consisting of lowercase English letters.'
b'It is guaranteed that the sum of lengths of strings over all test cases does not exceed 106106.'
b'Output'
b'For each test case, print the longest string which satisfies the conditions described above. If there exists multiple possible solutions, print any of them.'
Tags
binary search, greedy, hashing, string suffix structures, strings, *1800
