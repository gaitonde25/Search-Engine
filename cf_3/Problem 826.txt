b'Prefix function of string t=t1t2\xe2\x80\xa6tnt=t1t2\xe2\x80\xa6tn and position ii in it is defined as the length kk of the longest proper (not equal to the whole substring) prefix of substring t1t2\xe2\x80\xa6tit1t2\xe2\x80\xa6ti which is also a suffix of the same substring.'
b'For example, for string t=t= abacaba the values of the prefix function in positions 1,2,\xe2\x80\xa6,71,2,\xe2\x80\xa6,7 are equal to [0,0,1,0,1,2,3][0,0,1,0,1,2,3].'
b'Let f(t)f(t) be equal to the maximum value of the prefix function of string tt over all its positions. For example, f(f(abacaba)=3)=3.'
b'You are given a string ss. Reorder its characters arbitrarily to get a string tt (the number of occurrences of any character in strings ss and tt must be equal). The value of f(t)f(t) must be minimized. Out of all options to minimize f(t)f(t), choose the one where string tt is the lexicographically smallest.'
b'Input'
b'Each test contains multiple test cases. The first line contains the number of test cases tt (1\xe2\x89\xa4t\xe2\x89\xa41051\xe2\x89\xa4t\xe2\x89\xa4105). Description of the test cases follows.'
b'The only line of each test case contains string ss (1\xe2\x89\xa4|s|\xe2\x89\xa41051\xe2\x89\xa4|s|\xe2\x89\xa4105) consisting of lowercase English letters.'
b'It is guaranteed that the sum of lengths of ss over all test cases does not exceed 105105.'
b'Output'
b'For each test case print a single string tt.'
b'The multisets of letters in strings ss and tt must be equal. The value of f(t)f(t), the maximum of prefix functions in string tt, must be as small as possible. String tt must be the lexicographically smallest string out of all strings satisfying the previous conditions.'
Tags
constructive algorithms, greedy, strings, *2100
