b'Consider the infinite sequence ss of positive integers, created by repeating the following steps:'
b'  Find the lexicographically smallest triple of positive integers (a,b,c)(a,b,c) such that   a\xe2\x8a\x95b\xe2\x8a\x95c=0a\xe2\x8a\x95b\xe2\x8a\x95c=0, where \xe2\x8a\x95\xe2\x8a\x95 denotes the bitwise XOR operation.  aa, bb, cc are not in ss.  Here triple of integers (a1,b1,c1)(a1,b1,c1) is considered to be lexicographically smaller than triple (a2,b2,c2)(a2,b2,c2) if sequence [a1,b1,c1][a1,b1,c1] is lexicographically smaller than sequence [a2,b2,c2][a2,b2,c2].  Append aa, bb, cc to ss in this order.  Go back to the first step. '
b'You have integer nn. Find the nn-th element of ss.'
b'You have to answer tt independent test cases.'
b'A sequence aa is lexicographically smaller than a sequence bb if in the first position where aa and bb differ, the sequence aa has a smaller element than the corresponding element in bb.'
b'Input'
b'The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa41051\xe2\x89\xa4t\xe2\x89\xa4105)\xc2\xa0\xe2\x80\x94 the number of test cases.'
b'Each of the next tt lines contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa410161\xe2\x89\xa4n\xe2\x89\xa41016)\xc2\xa0\xe2\x80\x94 the position of the element you want to know.'
b'Output'
b'In each of the tt lines, output the answer to the corresponding test case.'
Tags
bitmasks, brute force, constructive algorithms, divide and conquer, math, *2200
