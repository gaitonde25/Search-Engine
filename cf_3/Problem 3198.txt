b"You are given a tree with nn vertices; its root is vertex 11. Also there is a token, initially placed in the root. You can move the token to other vertices. Let's assume current vertex of token is vv, then you make any of the following two possible moves: "
b'  move down to any leaf in subtree of vv;  if vertex vv is a leaf, then move up to the parent no more than kk times. In other words, if h(v)h(v) is the depth of vertex vv (the depth of the root is 00), then you can move to vertex toto such that toto is an ancestor of vv and h(v)\xe2\x88\x92k\xe2\x89\xa4h(to)h(v)\xe2\x88\x92k\xe2\x89\xa4h(to). '
b'Consider that root is not a leaf (even if its degree is 11). Calculate the maximum number of different leaves you can visit during one sequence of moves.'
b'Input'
b'The first line contains two integers nn and kk (1\xe2\x89\xa4k<n\xe2\x89\xa41061\xe2\x89\xa4k<n\xe2\x89\xa4106) \xe2\x80\x94 the number of vertices in the tree and the restriction on moving up, respectively.'
b'The second line contains n\xe2\x88\x921n\xe2\x88\x921 integers p2,p3,\xe2\x80\xa6,pnp2,p3,\xe2\x80\xa6,pn, where pipi is the parent of vertex ii.'
b'It is guaranteed that the input represents a valid tree, rooted at 11.'
b'Output'
b'Print one integer \xe2\x80\x94 the maximum possible number of different leaves you can visit.'
Tags
dfs and similar, dp, trees, *2500
