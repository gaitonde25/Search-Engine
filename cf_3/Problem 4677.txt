b'There was an epidemic in Monstropolis and all monsters became sick. To recover, all monsters lined up in queue for an appointment to the only doctor in the city.'
b'Soon, monsters became hungry and began to eat each other. '
b'One monster can eat other monster if its weight is strictly greater than the weight of the monster being eaten, and they stand in the queue next to each other. Monsters eat each other instantly. There are no monsters which are being eaten at the same moment. After the monster A eats the monster B, the weight of the monster A increases by the weight of the eaten monster B. In result of such eating the length of the queue decreases by one, all monsters after the eaten one step forward so that there is no empty places in the queue again. A monster can eat several monsters one after another. Initially there were n monsters in the queue, the i-th of which had weight ai.'
b'For example, if weights are [1,\xe2\x80\x892,\xe2\x80\x892,\xe2\x80\x892,\xe2\x80\x891,\xe2\x80\x892] (in order of queue, monsters are numbered from 1 to 6 from left to right) then some of the options are:'
b"  the first monster can't eat the second monster because a1\xe2\x80\x89=\xe2\x80\x891 is not greater than a2\xe2\x80\x89=\xe2\x80\x892;  the second monster can't eat the third monster because a2\xe2\x80\x89=\xe2\x80\x892 is not greater than a3\xe2\x80\x89=\xe2\x80\x892;  the second monster can't eat the fifth monster because they are not neighbors;  the second monster can eat the first monster, the queue will be transformed to [3,\xe2\x80\x892,\xe2\x80\x892,\xe2\x80\x891,\xe2\x80\x892]. "
b'After some time, someone said a good joke and all monsters recovered. At that moment there were k (k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n) monsters in the queue, the j-th of which had weight bj. Both sequences (a and b) contain the weights of the monsters in the order from the first to the last.'
b"You are required to provide one of the possible orders of eating monsters which led to the current queue, or to determine that this could not happen. Assume that the doctor didn't make any appointments while monsters were eating each other."
b'Input'
b'The first line contains single integer n (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89500)\xc2\xa0\xe2\x80\x94 the number of monsters in the initial queue.'
b'The second line contains n integers a1,\xe2\x80\x89a2,\xe2\x80\x89...,\xe2\x80\x89an (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89106)\xc2\xa0\xe2\x80\x94 the initial weights of the monsters.'
b'The third line contains single integer k (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n)\xc2\xa0\xe2\x80\x94 the number of monsters in the queue after the joke. '
b'The fourth line contains k integers b1,\xe2\x80\x89b2,\xe2\x80\x89...,\xe2\x80\x89bk (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89bj\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x895\xc2\xb7108)\xc2\xa0\xe2\x80\x94 the weights of the monsters after the joke. '
b'Monsters are listed in the order from the beginning of the queue to the end.'
b'Output'
b'In case if no actions could lead to the final queue, print "NO" (without quotes) in the only line. '
b'Otherwise print "YES" (without quotes) in the first line. In the next n\xe2\x80\x89-\xe2\x80\x89k lines print actions in the chronological order. In each line print x\xc2\xa0\xe2\x80\x94 the index number of the monster in the current queue which eats and, separated by space, the symbol \'L\' if the monster which stays the x-th in the queue eats the monster in front of him, or \'R\' if the monster which stays the x-th in the queue eats the monster behind him. After each eating the queue is enumerated again. '
b'When one monster eats another the queue decreases. If there are several answers, print any of them.'
Tags
constructive algorithms, dp, greedy, two pointers, *1800
