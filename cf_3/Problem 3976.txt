b'\xe2\x80\x94 I... I survived.\xe2\x80\x94 Welcome home, Chtholly.\xe2\x80\x94 I kept my promise...\xe2\x80\x94 I made it... I really made it!'
b'After several days of fighting, Chtholly Nota Seniorious miraculously returned from the fierce battle.'
b'As promised, Willem is now baking butter cake for her.'
b'However, although Willem is skilled in making dessert, he rarely bakes butter cake.'
b'This time, Willem made a big mistake \xe2\x80\x94 he accidentally broke the oven!'
b'Fortunately, Chtholly decided to help him.'
b'Willem puts n cakes on a roll, cakes are numbered from 1 to n, the i-th cake needs ai seconds of baking.'
b'Willem needs Chtholly to do m operations to bake the cakes.'
b'Operation 1: 1 l r x'
b'Willem asks Chtholly to check each cake in the range [l,\xe2\x80\x89r], if the cake needs to be baked for more than x seconds, he would bake it for x seconds and put it back in its place. More precisely, for every i in range [l,\xe2\x80\x89r], if ai is strictly more than x, ai becomes equal ai\xe2\x80\x89-\xe2\x80\x89x.'
b'Operation 2: 2 l r x'
b'Willem asks Chtholly to count the number of cakes in the range [l,\xe2\x80\x89r] that needs to be cooked for exactly x seconds. More formally you should find number of such i in range [l,\xe2\x80\x89r], that ai\xe2\x80\x89=\xe2\x80\x89x.'
b'Input'
b'The first line contains two integers n and m (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n,\xe2\x80\x89m\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).'
b'The second line contains n integers, i-th of them is ai (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ai\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105).'
b'The next m lines are the m operations described above. It is guaranteed that 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89l\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89r\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n and 1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89x\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89105.'
b'Output'
b'For each operation of the second type, print the answer.'
Tags
data structures, dsu, *3100
