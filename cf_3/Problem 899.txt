b'Phoenix loves playing with bits\xc2\xa0\xe2\x80\x94 specifically, by using the bitwise operations AND, OR, and XOR. He has nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an, and will perform qq of the following queries:'
b'  replace all numbers aiai where l\xe2\x89\xa4ai\xe2\x89\xa4rl\xe2\x89\xa4ai\xe2\x89\xa4r with aiai AND xx;  replace all numbers aiai where l\xe2\x89\xa4ai\xe2\x89\xa4rl\xe2\x89\xa4ai\xe2\x89\xa4r with aiai OR xx;  replace all numbers aiai where l\xe2\x89\xa4ai\xe2\x89\xa4rl\xe2\x89\xa4ai\xe2\x89\xa4r with aiai XOR xx;  output how many distinct integers aiai where l\xe2\x89\xa4ai\xe2\x89\xa4rl\xe2\x89\xa4ai\xe2\x89\xa4r. '
b'For each query, Phoenix is given ll, rr, and xx. Note that he is considering the values of the numbers, not their indices.'
b'Input'
b'The first line contains two integers nn and qq (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105; 1\xe2\x89\xa4q\xe2\x89\xa41051\xe2\x89\xa4q\xe2\x89\xa4105)\xc2\xa0\xe2\x80\x94 the number of integers and the number of queries, respectively.'
b'The second line contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (0\xe2\x89\xa4ai<2200\xe2\x89\xa4ai<220)\xc2\xa0\xe2\x80\x94 the integers that Phoenix starts with.'
b'The next qq lines contain the queries. For each query, the first integer of each line is tt (1\xe2\x89\xa4t\xe2\x89\xa441\xe2\x89\xa4t\xe2\x89\xa44)\xc2\xa0\xe2\x80\x94 the type of query.'
b'If t\xe2\x88\x88{1,2,3}t\xe2\x88\x88{1,2,3}, then three integers lili, riri, and xixi will follow (0\xe2\x89\xa4li,ri,xi<2200\xe2\x89\xa4li,ri,xi<220; li\xe2\x89\xa4rili\xe2\x89\xa4ri).'
b'Otherwise, if t=4t=4, two integers lili and riri will follow (0\xe2\x89\xa4li\xe2\x89\xa4ri<2200\xe2\x89\xa4li\xe2\x89\xa4ri<220).'
b'It is guaranteed that there is at least one query where t=4t=4.'
b'Output'
b'Print the answer for each query where t=4t=4.'
Tags
bitmasks, brute force, data structures, sortings, *3500
