b'Paprika loves permutations. She has an array a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an. She wants to make the array a permutation of integers 11 to nn.'
b'In order to achieve this goal, she can perform operations on the array. In each operation she can choose two integers ii (1\xe2\x89\xa4i\xe2\x89\xa4n1\xe2\x89\xa4i\xe2\x89\xa4n) and xx (x>0x>0), then perform ai:=aimodxai:=aimodx (that is, replace aiai by the remainder of aiai divided by xx). In different operations, the chosen ii and xx can be different.'
b'Determine the minimum number of operations needed to make the array a permutation of integers 11 to nn. If it is impossible, output \xe2\x88\x921\xe2\x88\x921.'
b'A permutation is an array consisting of nn distinct integers from 11 to nn in arbitrary order. For example, [2,3,1,5,4][2,3,1,5,4] is a permutation, but [1,2,2][1,2,2] is not a permutation (22 appears twice in the array) and [1,3,4][1,3,4] is also not a permutation (n=3n=3 but there is 44 in the array).'
b'Input'
b'Each test contains multiple test cases. The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa41041\xe2\x89\xa4t\xe2\x89\xa4104)\xc2\xa0\xe2\x80\x94 the number of test cases. Description of the test cases follows.'
b'The first line of each test case contains an integer nn (1\xe2\x89\xa4n\xe2\x89\xa41051\xe2\x89\xa4n\xe2\x89\xa4105).'
b'The second line of each test case contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an. (1\xe2\x89\xa4ai\xe2\x89\xa41091\xe2\x89\xa4ai\xe2\x89\xa4109).'
b'It is guaranteed that the sum of nn over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.'
b'Output'
b'For each test case, output the minimum number of operations needed to make the array a permutation of integers 11 to nn, or \xe2\x88\x921\xe2\x88\x921 if it is impossible.'
Tags
binary search, greedy, math, sortings, *1300
