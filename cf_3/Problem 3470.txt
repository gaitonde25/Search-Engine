b'Mishka got an integer array aa of length nn as a birthday present (what a surprise!).'
b'Mishka doesn\'t like this present and wants to change it somehow. He has invented an algorithm and called it "Mishka\'s Adjacent Replacements Algorithm". This algorithm can be represented as a sequence of steps:'
b'  Replace each occurrence of 11 in the array aa with 22;  Replace each occurrence of 22 in the array aa with 11;  Replace each occurrence of 33 in the array aa with 44;  Replace each occurrence of 44 in the array aa with 33;  Replace each occurrence of 55 in the array aa with 66;  Replace each occurrence of 66 in the array aa with 55;  \xe2\x80\xa6\xe2\x80\xa6  Replace each occurrence of 109\xe2\x88\x921109\xe2\x88\x921 in the array aa with 109109;  Replace each occurrence of 109109 in the array aa with 109\xe2\x88\x921109\xe2\x88\x921. '
b'Note that the dots in the middle of this algorithm mean that Mishka applies these replacements for each pair of adjacent integers (2i\xe2\x88\x921,2i2i\xe2\x88\x921,2i) for each i\xe2\x88\x88{1,2,\xe2\x80\xa6,5\xe2\x8b\x85108}i\xe2\x88\x88{1,2,\xe2\x80\xa6,5\xe2\x8b\x85108} as described above.'
b'For example, for the array a=[1,2,4,5,10]a=[1,2,4,5,10], the following sequence of arrays represents the algorithm: '
b'[1,2,4,5,10][1,2,4,5,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 11 with 22) \xe2\x86\x92\xe2\x86\x92 [2,2,4,5,10][2,2,4,5,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 22 with 11) \xe2\x86\x92\xe2\x86\x92 [1,1,4,5,10][1,1,4,5,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 33 with 44) \xe2\x86\x92\xe2\x86\x92 [1,1,4,5,10][1,1,4,5,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 44 with 33) \xe2\x86\x92\xe2\x86\x92 [1,1,3,5,10][1,1,3,5,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 55 with 66) \xe2\x86\x92\xe2\x86\x92 [1,1,3,6,10][1,1,3,6,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 66 with 55) \xe2\x86\x92\xe2\x86\x92 [1,1,3,5,10][1,1,3,5,10] \xe2\x86\x92\xe2\x86\x92 \xe2\x80\xa6\xe2\x80\xa6 \xe2\x86\x92\xe2\x86\x92 [1,1,3,5,10][1,1,3,5,10] \xe2\x86\x92\xe2\x86\x92 (replace all occurrences of 1010 with 99) \xe2\x86\x92\xe2\x86\x92 [1,1,3,5,9][1,1,3,5,9]. The later steps of the algorithm do not change the array.'
b"Mishka is very lazy and he doesn't want to apply these changes by himself. But he is very interested in their result. Help him find it."
b'Input'
b"The first line of the input contains one integer number nn (1\xe2\x89\xa4n\xe2\x89\xa410001\xe2\x89\xa4n\xe2\x89\xa41000) \xe2\x80\x94 the number of elements in Mishka's birthday present (surprisingly, an array)."
b'The second line of the input contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa41091\xe2\x89\xa4ai\xe2\x89\xa4109) \xe2\x80\x94 the elements of the array.'
b'Output'
b'Print nn integers \xe2\x80\x94 b1,b2,\xe2\x80\xa6,bnb1,b2,\xe2\x80\xa6,bn, where bibi is the final value of the ii-th element of the array after applying "Mishka\'s Adjacent Replacements Algorithm" to the array aa. Note that you cannot change the order of elements in the array.'
Tags
implementation, *800
