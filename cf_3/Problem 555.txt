b'The new generation external memory contains an array of integers a[1\xe2\x80\xa6n]=[a1,a2,\xe2\x80\xa6,an]a[1\xe2\x80\xa6n]=[a1,a2,\xe2\x80\xa6,an].'
b'This type of memory does not support changing the value of an arbitrary element. Instead, it allows you to cut out any segment of the given array, cyclically shift (rotate) it by any offset and insert it back into the same place.'
b'Technically, each cyclic shift consists of two consecutive actions: '
b"  You may select arbitrary indices ll and rr (1\xe2\x89\xa4l<r\xe2\x89\xa4n1\xe2\x89\xa4l<r\xe2\x89\xa4n) as the boundaries of the segment.  Then you replace the segment a[l\xe2\x80\xa6r]a[l\xe2\x80\xa6r] with it's cyclic shift to the left by an arbitrary offset dd. The concept of a cyclic shift can be also explained by following relations: the sequence [1,4,1,3][1,4,1,3] is a cyclic shift of the sequence [3,1,4,1][3,1,4,1] to the left by the offset 11 and the sequence [4,1,3,1][4,1,3,1] is a cyclic shift of the sequence [3,1,4,1][3,1,4,1] to the left by the offset 22. "
b'For example, if a=[1,3,2,8,5]a=[1,3,2,8,5], then choosing l=2l=2, r=4r=4 and d=2d=2 yields a segment a[2\xe2\x80\xa64]=[3,2,8]a[2\xe2\x80\xa64]=[3,2,8]. This segment is then shifted by the offset d=2d=2 to the left, and you get a segment [8,3,2][8,3,2] which then takes the place of of the original elements of the segment. In the end you get a=[1,8,3,2,5]a=[1,8,3,2,5].'
b"Sort the given array aa using no more than nn cyclic shifts of any of its segments. Note that you don't need to minimize the number of cyclic shifts. Any method that requires nn or less cyclic shifts will be accepted."
b'Input'
b'The first line contains an integer tt (1\xe2\x89\xa4t\xe2\x89\xa410001\xe2\x89\xa4t\xe2\x89\xa41000)\xc2\xa0\xe2\x80\x94 the number of test cases.'
b'The next 2t2t lines contain the descriptions of the test cases. '
b"The first line of each test case description contains an integer nn (2\xe2\x89\xa4n\xe2\x89\xa4502\xe2\x89\xa4n\xe2\x89\xa450)\xc2\xa0\xe2\x80\x94 the length of the array. The second line consists of space-separated elements of the array aiai (\xe2\x88\x92109\xe2\x89\xa4ai\xe2\x89\xa4109\xe2\x88\x92109\xe2\x89\xa4ai\xe2\x89\xa4109). Elements of array aa may repeat and don't have to be unique."
b'Output'
b'Print tt answers to all input test cases. '
b'The first line of the answer of each test case should contain an integer kk (0\xe2\x89\xa4k\xe2\x89\xa4n0\xe2\x89\xa4k\xe2\x89\xa4n)\xc2\xa0\xe2\x80\x94 the number of actions to sort the array. The next kk lines should contain descriptions of the actions formatted as "ll\xc2\xa0rr\xc2\xa0dd" (without quotes) where ll and rr (1\xe2\x89\xa4l<r\xe2\x89\xa4n1\xe2\x89\xa4l<r\xe2\x89\xa4n) are the boundaries of the segment being shifted, while dd (1\xe2\x89\xa4d\xe2\x89\xa4r\xe2\x88\x92l1\xe2\x89\xa4d\xe2\x89\xa4r\xe2\x88\x92l) is the offset value. Please remember that only the cyclic shifts to the left are considered so the chosen segment will be shifted by the offset dd to the to the left.'
b'Note that you are not required to find the minimum number of cyclic shifts needed for sorting. Any sorting method where the number of shifts does not exceed nn will be accepted.'
b'If the given array aa is already sorted, one of the possible answers is k=0k=0 and an empty sequence of cyclic shifts.'
b'If there are several possible answers, you may print any of them.'
Tags
implementation, sortings, *1100
