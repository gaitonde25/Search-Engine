b'Phoenix has a string ss consisting of lowercase Latin letters. He wants to distribute all the letters of his string into kk non-empty strings a1,a2,\xe2\x80\xa6,aka1,a2,\xe2\x80\xa6,ak such that every letter of ss goes to exactly one of the strings aiai. The strings aiai do not need to be substrings of ss. Phoenix can distribute letters of ss and rearrange the letters within each string aiai however he wants.'
b'For example, if s=s= baba and k=2k=2, Phoenix may distribute the letters of his string in many ways, such as: '
b'  ba and ba  a and abb  ab and ab  aa and bb '
b'But these ways are invalid: '
b'  baa and ba  b and ba  baba and empty string (aiai should be non-empty) '
b'Phoenix wants to distribute the letters of his string ss into kk strings a1,a2,\xe2\x80\xa6,aka1,a2,\xe2\x80\xa6,ak to minimize the lexicographically maximum string among them, i.\xc2\xa0e. minimize max(a1,a2,\xe2\x80\xa6,ak)max(a1,a2,\xe2\x80\xa6,ak). Help him find the optimal distribution and print the minimal possible value of max(a1,a2,\xe2\x80\xa6,ak)max(a1,a2,\xe2\x80\xa6,ak).'
b'String xx is lexicographically less than string yy if either xx is a prefix of yy and x\xe2\x89\xa0yx\xe2\x89\xa0y, or there exists an index ii (1\xe2\x89\xa4i\xe2\x89\xa4min(|x|,|y|))1\xe2\x89\xa4i\xe2\x89\xa4min(|x|,|y|)) such that xixi < yiyi and for every jj (1\xe2\x89\xa4j<i)(1\xe2\x89\xa4j<i) xj=yjxj=yj. Here |x||x| denotes the length of the string xx.'
b'Input'
b'The input consists of multiple test cases. The first line contains an integer tt (1\xe2\x89\xa4t\xe2\x89\xa410001\xe2\x89\xa4t\xe2\x89\xa41000)\xc2\xa0\xe2\x80\x94 the number of test cases. Each test case consists of two lines.'
b'The first line of each test case consists of two integers nn and kk (1\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa41051\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa4105)\xc2\xa0\xe2\x80\x94 the length of string ss and the number of non-empty strings, into which Phoenix wants to distribute letters of ss, respectively.'
b'The second line of each test case contains a string ss of length nn consisting only of lowercase Latin letters.'
b'It is guaranteed that the sum of nn over all test cases is \xe2\x89\xa4105\xe2\x89\xa4105.'
b'Output'
b'Print tt answers\xc2\xa0\xe2\x80\x94 one per test case. The ii-th answer should be the minimal possible value of max(a1,a2,\xe2\x80\xa6,ak)max(a1,a2,\xe2\x80\xa6,ak) in the ii-th test case.'
Tags
constructive algorithms, greedy, sortings, strings, *1600
