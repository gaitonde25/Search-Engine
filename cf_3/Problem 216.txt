b'The knight is standing in front of a long and narrow hallway. A princess is waiting at the end of it.'
b'In a hallway there are three doors: a red door, a green door and a blue door. The doors are placed one after another, however, possibly in a different order. To proceed to the next door, the knight must first open the door before.'
b'Each door can be only opened with a key of the corresponding color. So three keys: a red key, a green key and a blue key\xc2\xa0\xe2\x80\x94 are also placed somewhere in the hallway. To open the door, the knight should first pick up the key of its color.'
b'The knight has a map of the hallway. It can be transcribed as a string, consisting of six characters: '
b'  R, G, B\xc2\xa0\xe2\x80\x94 denoting red, green and blue doors, respectively;  r, g, b\xc2\xa0\xe2\x80\x94 denoting red, green and blue keys, respectively. '
b'Each of these six characters appears in the string exactly once.'
b'The knight is standing at the beginning of the hallway\xc2\xa0\xe2\x80\x94 on the left on the map.'
b'Given a map of the hallway, determine if the knight can open all doors and meet the princess at the end of the hallway.'
b'Input'
b'The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa47201\xe2\x89\xa4t\xe2\x89\xa4720)\xc2\xa0\xe2\x80\x94 the number of testcases.'
b'Each testcase consists of a single string. Each character is one of R, G, B (for the doors), r, g, b (for the keys), and each of them appears exactly once.'
b'Output'
b'For each testcase, print YES if the knight can open all doors. Otherwise, print NO.'
Tags
implementation, *800
