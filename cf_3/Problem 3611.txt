b'Grisha come to a contest and faced the following problem.'
b'You are given an array of size nn, initially consisting of zeros. The elements of the array are enumerated from 11 to nn. You perform qq operations on the array. The ii-th operation is described with three integers lili, riri and xixi (1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa4n1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa4n, 1\xe2\x89\xa4xi\xe2\x89\xa4n1\xe2\x89\xa4xi\xe2\x89\xa4n) and means that you should add xixi to each of the elements with indices li,li+1,\xe2\x80\xa6,rili,li+1,\xe2\x80\xa6,ri. After all operations you should find the maximum in the array.'
b'Grisha is clever, so he solved the problem quickly.'
b'However something went wrong inside his head and now he thinks of the following question: "consider we applied some subset of the operations to the array. What are the possible values of the maximum in the array?"'
b'Help Grisha, find all integers yy between 11 and nn such that if you apply some subset (possibly empty) of the operations, then the maximum in the array becomes equal to yy.'
b'Input'
b'The first line contains two integers nn and qq (1\xe2\x89\xa4n,q\xe2\x89\xa41041\xe2\x89\xa4n,q\xe2\x89\xa4104)\xc2\xa0\xe2\x80\x94 the length of the array and the number of queries in the initial problem.'
b'The following qq lines contain queries, one per line. The ii-th of these lines contains three integers lili, riri and xixi (1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa4n1\xe2\x89\xa4li\xe2\x89\xa4ri\xe2\x89\xa4n, 1\xe2\x89\xa4xi\xe2\x89\xa4n1\xe2\x89\xa4xi\xe2\x89\xa4n), denoting a query of adding xixi to the segment from lili-th to riri-th elements of the array, inclusive.'
b'Output'
b'In the first line print the only integer kk, denoting the number of integers from 11 to nn, inclusive, that can be equal to the maximum in the array after applying some subset (possibly empty) of the given operations.'
b'In the next line print these kk integers from 11 to nn\xc2\xa0\xe2\x80\x94 the possible values of the maximum. Print these integers in increasing order.'
Tags
bitmasks, data structures, divide and conquer, dp, *2200
