b"You found a useless array aa of 2n2n positive integers. You have realized that you actually don't need this array, so you decided to throw out all elements of aa."
b'It could have been an easy task, but it turned out that you should follow some rules: '
b'  In the beginning, you select any positive integer xx. Then you do the following operation nn times:   select two elements of array with sum equals xx;  remove them from aa and replace xx with maximum of that two numbers.  '
b'For example, if initially a=[3,5,1,2]a=[3,5,1,2], you can select x=6x=6. Then you can select the second and the third elements of aa with sum 5+1=65+1=6 and throw them out. After this operation, xx equals 55 and there are two elements in array: 33 and 22. You can throw them out on the next operation.'
b"Note, that you choose xx before the start and can't change it as you want between the operations."
b'Determine how should you behave to throw out all elements of aa.'
b'Input'
b'The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa410001\xe2\x89\xa4t\xe2\x89\xa41000)\xc2\xa0\xe2\x80\x94 the number of test cases.'
b'The first line of each test case contains the single integer nn (1\xe2\x89\xa4n\xe2\x89\xa410001\xe2\x89\xa4n\xe2\x89\xa41000).'
b'The second line of each test case contains 2n2n integers a1,a2,\xe2\x80\xa6,a2na1,a2,\xe2\x80\xa6,a2n (1\xe2\x89\xa4ai\xe2\x89\xa41061\xe2\x89\xa4ai\xe2\x89\xa4106)\xc2\xa0\xe2\x80\x94 the initial array aa.'
b"It is guaranteed that the total sum of nn over all test cases doesn't exceed 10001000."
b'Output'
b'For each test case in the first line print YES if it is possible to throw out all elements of the array and NO otherwise.'
b"If it is possible to throw out all elements, print the initial value of xx you've chosen. Print description of nn operations next. For each operation, print the pair of integers you remove."
Tags
brute force, constructive algorithms, data structures, greedy, implementation, sortings, *1700
