b'After learning about polynomial hashing, Heidi decided to learn about shift-xor hashing. In particular, she came across this interesting problem.'
b'Given a bitstring y\xe2\x88\x88{0,1}ny\xe2\x88\x88{0,1}n find out the number of different kk (0\xe2\x89\xa4k<n0\xe2\x89\xa4k<n) such that there exists x\xe2\x88\x88{0,1}nx\xe2\x88\x88{0,1}n for which y=x\xe2\x8a\x95shiftk(x).y=x\xe2\x8a\x95shiftk(x).'
b'In the above, \xe2\x8a\x95\xe2\x8a\x95 is the xor operation and shiftkshiftk is the operation of shifting a bitstring cyclically to the right kk times. For example, 001\xe2\x8a\x95111=110001\xe2\x8a\x95111=110 and shift3(00010010111000)=00000010010111shift3(00010010111000)=00000010010111.'
b'Input'
b'The first line contains an integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105), the length of the bitstring yy.'
b'The second line contains the bitstring yy.'
b'Output'
b'Output a single integer: the number of suitable values of kk.'
Tags
brute force, number theory, *2100
