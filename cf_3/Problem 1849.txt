b'You are given a complete directed graph KnKn with nn vertices: each pair of vertices u\xe2\x89\xa0vu\xe2\x89\xa0v in KnKn have both directed edges (u,v)(u,v) and (v,u)(v,u); there are no self-loops.'
b'You should find such a cycle in KnKn that visits every directed edge exactly once (allowing for revisiting vertices).'
b'We can write such cycle as a list of n(n\xe2\x88\x921)+1n(n\xe2\x88\x921)+1 vertices v1,v2,v3,\xe2\x80\xa6,vn(n\xe2\x88\x921)\xe2\x88\x921,vn(n\xe2\x88\x921),vn(n\xe2\x88\x921)+1=v1v1,v2,v3,\xe2\x80\xa6,vn(n\xe2\x88\x921)\xe2\x88\x921,vn(n\xe2\x88\x921),vn(n\xe2\x88\x921)+1=v1 \xe2\x80\x94 a visiting order, where each (vi,vi+1)(vi,vi+1) occurs exactly once.'
b"Find the lexicographically smallest such cycle. It's not hard to prove that the cycle always exists."
b'Since the answer can be too large print its [l,r][l,r] segment, in other words, vl,vl+1,\xe2\x80\xa6,vrvl,vl+1,\xe2\x80\xa6,vr.'
b'Input'
b'The first line contains the single integer TT (1\xe2\x89\xa4T\xe2\x89\xa41001\xe2\x89\xa4T\xe2\x89\xa4100) \xe2\x80\x94 the number of test cases.'
b'Next TT lines contain test cases \xe2\x80\x94 one per line. The first and only line of each test case contains three integers nn, ll and rr (2\xe2\x89\xa4n\xe2\x89\xa41052\xe2\x89\xa4n\xe2\x89\xa4105, 1\xe2\x89\xa4l\xe2\x89\xa4r\xe2\x89\xa4n(n\xe2\x88\x921)+11\xe2\x89\xa4l\xe2\x89\xa4r\xe2\x89\xa4n(n\xe2\x88\x921)+1, r\xe2\x88\x92l+1\xe2\x89\xa4105r\xe2\x88\x92l+1\xe2\x89\xa4105) \xe2\x80\x94 the number of vertices in KnKn, and segment of the cycle to print.'
b"It's guaranteed that the total sum of nn doesn't exceed 105105 and the total sum of r\xe2\x88\x92l+1r\xe2\x88\x92l+1 doesn't exceed 105105."
b'Output'
b'For each test case print the segment vl,vl+1,\xe2\x80\xa6,vrvl,vl+1,\xe2\x80\xa6,vr of the lexicographically smallest cycle that visits every edge exactly once.'
Tags
constructive algorithms, graphs, greedy, implementation, *1800
