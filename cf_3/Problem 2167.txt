b'Lucy likes letters. She studied the definition of the lexicographical order at school and plays with it.'
b'At first, she tried to construct the lexicographically smallest word out of given letters. It was so easy! Then she tried to build multiple words and minimize one of them. This was much harder!'
b'Formally, Lucy wants to make nn words of length ll each out of the given n\xe2\x8b\x85ln\xe2\x8b\x85l letters, so that the kk-th of them in the lexicographic order is lexicographically as small as possible.'
b'Input'
b'The first line contains three integers nn, ll, and kk (1\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa410001\xe2\x89\xa4k\xe2\x89\xa4n\xe2\x89\xa41000; 1\xe2\x89\xa4l\xe2\x89\xa410001\xe2\x89\xa4l\xe2\x89\xa41000)\xc2\xa0\xe2\x80\x94 the total number of words, the length of each word, and the index of the word Lucy wants to minimize.'
b'The next line contains a string of n\xe2\x8b\x85ln\xe2\x8b\x85l lowercase letters of the English alphabet.'
b'Output'
b'Output nn words of ll letters each, one per line, using the letters from the input. Words must be sorted in the lexicographic order, and the kk-th of them must be lexicographically as small as possible. If there are multiple answers with the smallest kk-th word, output any of them.'
Tags
constructive algorithms, strings, *1800
