b'From beginning till end, this message has been waiting to be conveyed.'
b'For a given unordered multiset of n lowercase English letters ("multi" means that a letter may appear more than once), we treat all letters as strings of length 1, and repeat the following operation n\xe2\x80\x89-\xe2\x80\x891 times:'
b'  Remove any two elements s and t from the set, and add their concatenation s\xe2\x80\x89+\xe2\x80\x89t to the set. '
b'The cost of such operation is defined to be , where f(s,\xe2\x80\x89c) denotes the number of times character c appears in string s.'
b'Given a non-negative integer k, construct any valid non-empty set of no more than 100\xe2\x80\x89000 letters, such that the minimum accumulative cost of the whole process is exactly k. It can be shown that a solution always exists.'
b'Input'
b'The first and only line of input contains a non-negative integer k (0\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89k\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89100\xe2\x80\x89000) \xe2\x80\x94 the required minimum cost.'
b'Output'
b'Output a non-empty string of no more than 100\xe2\x80\x89000 lowercase English letters \xe2\x80\x94 any multiset satisfying the requirements, concatenated to be a string.'
b"Note that the printed string doesn't need to be the final concatenated string. It only needs to represent an unordered multiset of letters."
Tags
constructive algorithms, *1600
