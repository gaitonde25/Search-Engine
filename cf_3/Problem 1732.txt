b'You are given a training dataset, in which each entry is a features vector (an array of 2 real numbers) and a label 0 or 1 indicating the class to which this vector belongs.'
b'Your goal is to use this dataset to train a quantum classification model that will accurately classify a validation dataset - a different dataset generated using the same data distribution as the training one. The error rate of classifying the validation dataset using your model (the percentage of incorrectly classified samples) should be less than 5 '
b'  The quantum classification library that will use your model to classify the data is documented here.  This tutorial has an end-to-end example of training a model using this library as a Python notebook.  You can find examples of training a model and using it for classification here. '
b'Input'
b'Your code will not be given any inputs. Instead, you should use the provided dataset file to train your model.'
b'The training dataset is represented as a JSON file and consists of two arrays, "Features" and "Labels". Each array has exactly 200 elements. Each element of the "Features" array is an array with 2 elements, each of them a floating-point number between -1 and 1. Each element of the "Labels" array is the label of the class to which the corresponding element of the "Features" array belongs, 0 or 1.'
b'Output'
b"Your code should return the description of the model you'd like to use in the following format:"
b'  The model is described using a tuple (ControlledRotation[], (Double[], Double)).  The first element of the tuple describes circuit geometry of the model as an array of controlled rotation gates.  The second element of the tuple describes numeric parameters of the model and is a tuple of an array of rotation angles used by the gates and the bias used to decide the class of the model. '
b'Your code should have the following signature:'
b'namespace Solution {    open Microsoft.Quantum.MachineLearning;    operation Solve () : (ControlledRotation[], (Double[], Double)) {        // your code here    }}'
b'Please refer to the documentation and examples for details on each parameter.'
Tags
*special problem
