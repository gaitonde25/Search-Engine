b'You are given an undirected graph with nn vertices numbered from 11 to nn. Initially there are no edges.'
b'You are asked to perform some queries on the graph. Let lastlast be the answer to the latest query of the second type, it is set to 00 before the first such query. Then the queries are the following:'
b"  1\xc2\xa0x\xc2\xa0y1\xc2\xa0x\xc2\xa0y (1\xe2\x89\xa4x,y\xe2\x89\xa4n1\xe2\x89\xa4x,y\xe2\x89\xa4n, x\xe2\x89\xa0yx\xe2\x89\xa0y) \xe2\x80\x94 add an undirected edge between the vertices (x+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1(x+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1 and (y+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1(y+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1 if it doesn't exist yet, otherwise remove it;  2\xc2\xa0x\xc2\xa0y2\xc2\xa0x\xc2\xa0y (1\xe2\x89\xa4x,y\xe2\x89\xa4n1\xe2\x89\xa4x,y\xe2\x89\xa4n, x\xe2\x89\xa0yx\xe2\x89\xa0y) \xe2\x80\x94 check if there exists a path between the vertices (x+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1(x+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1 and (y+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1(y+last\xe2\x88\x921)\xc2\xa0mod\xc2\xa0n+1, which goes only through currently existing edges, and set lastlast to 11 if so and 00 otherwise. "
b'Good luck!'
b'Input'
b'The first line contains two integer numbers nn and mm (2\xe2\x89\xa4n,m\xe2\x89\xa42\xe2\x8b\x851052\xe2\x89\xa4n,m\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of vertices and the number of queries, respectively.'
b'Each of the following mm lines contains a query of one of two aforementioned types. It is guaranteed that there is at least one query of the second type.'
b'Output'
b"Print a string, consisting of characters '0' and '1'. The ii-th character should be the answer to the ii-th query of the second type. Therefore the length of the string should be equal to the number of queries of the second type."
Tags
data structures, divide and conquer, dsu, graphs, trees, *2600
