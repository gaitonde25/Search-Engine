b'The life goes up and down, just like nice sequences. Sequence t1,\xe2\x80\x89t2,\xe2\x80\x89...,\xe2\x80\x89tn is called nice if the following two conditions are satisfied: '
b'  ti\xe2\x80\x89<\xe2\x80\x89ti\xe2\x80\x89+\xe2\x80\x891 for each odd i\xe2\x80\x89<\xe2\x80\x89n;  ti\xe2\x80\x89>\xe2\x80\x89ti\xe2\x80\x89+\xe2\x80\x891 for each even i\xe2\x80\x89<\xe2\x80\x89n. '
b'For example, sequences (2,\xe2\x80\x898), (1,\xe2\x80\x895,\xe2\x80\x891) and (2,\xe2\x80\x895,\xe2\x80\x891,\xe2\x80\x89100,\xe2\x80\x8999,\xe2\x80\x89120) are nice, while (1,\xe2\x80\x891), (1,\xe2\x80\x892,\xe2\x80\x893) and (2,\xe2\x80\x895,\xe2\x80\x893,\xe2\x80\x892) are not.'
b'Bear Limak has a sequence of positive integers t1,\xe2\x80\x89t2,\xe2\x80\x89...,\xe2\x80\x89tn. This sequence is not nice now and Limak wants to fix it by a single swap. He is going to choose two indices i\xe2\x80\x89<\xe2\x80\x89j and swap elements ti and tj in order to get a nice sequence. Count the number of ways to do so. Two ways are considered different if indices of elements chosen for a swap are different.'
b'Input'
b'The first line of the input contains one integer n (2\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89n\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89150\xe2\x80\x89000)\xc2\xa0\xe2\x80\x94 the length of the sequence.'
b"The second line contains n integers t1,\xe2\x80\x89t2,\xe2\x80\x89...,\xe2\x80\x89tn (1\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89ti\xe2\x80\x89\xe2\x89\xa4\xe2\x80\x89150\xe2\x80\x89000) \xe2\x80\x94 the initial sequence. It's guaranteed that the given sequence is not nice."
b'Output'
b'Print the number of ways to swap two elements exactly once in order to get a nice sequence.'
Tags
brute force, implementation, *1900
