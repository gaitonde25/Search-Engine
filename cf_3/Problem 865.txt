b'  '
b'William really likes the cellular automaton called "Game of Life" so he decided to make his own version. For simplicity, William decided to define his cellular automaton on an array containing nn cells, with each cell either being alive or dead.'
b"Evolution of the array in William's cellular automaton occurs iteratively in the following way:"
b'  If the element is dead and it has exactly 11 alive neighbor in the current state of the array, then on the next iteration it will become alive. For an element at index ii the neighbors would be elements with indices i\xe2\x88\x921i\xe2\x88\x921 and i+1i+1. If there is no element at that index, it is considered to be a dead neighbor.  William is a humane person so all alive elements stay alive. '
b'Check the note section for examples of the evolution.'
b'You are given some initial state of all elements and you need to help William find the state of the array after mm iterations of evolution.'
b'Input'
b'Each test contains multiple test cases. The first line contains the number of test cases tt (1\xe2\x89\xa4t\xe2\x89\xa41031\xe2\x89\xa4t\xe2\x89\xa4103). Description of the test cases follows.'
b'The first line of each test case contains two integers nn and mm (2\xe2\x89\xa4n\xe2\x89\xa4103,1\xe2\x89\xa4m\xe2\x89\xa41092\xe2\x89\xa4n\xe2\x89\xa4103,1\xe2\x89\xa4m\xe2\x89\xa4109), which are the total number of cells in the array and the number of iterations.'
b'The second line of each test case contains a string of length nn made up of characters "0" and "1" and defines the initial state of the array. "1" means a cell is alive and "0" means it is dead.'
b'It is guaranteed that the sum of nn over all test cases does not exceed 104104.'
b'Output'
b'In each test case output a string of length nn, made up of characters "0" and "1" \xc2\xa0\xe2\x80\x94 the state of the array after mm iterations of evolution.'
Tags
implementation, *800
