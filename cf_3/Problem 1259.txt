b'This is the easy version of the problem. The difference between the versions is in the constraints on the array elements. You can make hacks only if all versions of the problem are solved.'
b'You are given an array [a1,a2,\xe2\x80\xa6,an][a1,a2,\xe2\x80\xa6,an]. '
b'Your goal is to find the length of the longest subarray of this array such that the most frequent value in it is not unique. In other words, you are looking for a subarray such that if the most frequent value occurs ff times in this subarray, then at least 22 different values should occur exactly ff times.'
b'An array cc is a subarray of an array dd if cc can be obtained from dd by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.'
b'Input'
b'The first line contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa42000001\xe2\x89\xa4n\xe2\x89\xa4200000)\xc2\xa0\xe2\x80\x94 the length of the array.'
b'The second line contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa4min(n,100)1\xe2\x89\xa4ai\xe2\x89\xa4min(n,100))\xc2\xa0\xe2\x80\x94 elements of the array.'
b'Output'
b'You should output exactly one integer \xc2\xa0\xe2\x80\x94 the length of the longest subarray of the array whose most frequent value is not unique. If there is no such subarray, output 00.'
Tags
data structures, greedy, *2600
