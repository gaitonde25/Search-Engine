b'Tenten runs a weapon shop for ninjas. Today she is willing to sell nn shurikens which cost 11, 22, ..., nn ryo (local currency). During a day, Tenten will place the shurikens onto the showcase, which is empty at the beginning of the day. Her job is fairly simple: sometimes Tenten places another shuriken (from the available shurikens) on the showcase, and sometimes a ninja comes in and buys a shuriken from the showcase. Since ninjas are thrifty, they always buy the cheapest shuriken from the showcase.'
b'Tenten keeps a record for all events, and she ends up with a list of the following types of records:'
b'  + means that she placed another shuriken on the showcase;  - x means that the shuriken of price xx was bought. '
b'Today was a lucky day, and all shurikens were bought. Now Tenten wonders if her list is consistent, and what could be a possible order of placing the shurikens on the showcase. Help her to find this out!'
b'Input'
b'The first line contains the only integer nn (1\xe2\x89\xa4n\xe2\x89\xa41051\xe2\x89\xa4n\xe2\x89\xa4105) standing for the number of shurikens. '
b"The following 2n2n lines describe the events in the format described above. It's guaranteed that there are exactly nn events of the first type, and each price from 11 to nn occurs exactly once in the events of the second type."
b'Output'
b'If the list is consistent, print "YES". Otherwise (that is, if the list is contradictory and there is no valid order of shurikens placement), print "NO".'
b'In the first case the second line must contain nn space-separated integers denoting the prices of shurikens in order they were placed. If there are multiple answers, print any.'
Tags
data structures, greedy, implementation, *1700
