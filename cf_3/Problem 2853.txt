b"Vasya likes to travel by train, but doesn't like when the car he travels in is located in the tail of the train."
b'Vasya gets on the train at the station. The train consists of nn cars indexed from 11 to nn counting from the locomotive (head of the train). Three types of events occur while the train is moving:'
b'  Some number of cars are added to the head of the train;  Some number of cars are added to the tail of the train;  Vasya recalculates the values of the convenience of the cars (read more about it below). '
b'At each moment of time we will index the cars from the head of the train, starting from 11. Note that when adding new cars to the head of the train, the indexing of the old ones may shift.'
b'To choose which car to go in, Vasya will use the value AiAi for each car (where ii is a car index), which is calculated as follows:'
b'  At the beginning of the trip Ai=0Ai=0, as well as for the new cars at the time of their addition.  During the next recalculation Vasya chooses some positive integers bb and ss and adds to all AiAi value b+(i\xe2\x88\x921)\xe2\x8b\x85sb+(i\xe2\x88\x921)\xe2\x8b\x85s. '
b"Vasya hasn't decided yet where he will get on the train and where will get off the train, so after each event of one of the three types he wants to know the least index of the car, such that its value AiAi is minimal. Since there is a lot of cars, Vasya asked you to write a program that answers his question."
b'Input'
b'The first line contains two integers nn and mm (1\xe2\x89\xa4n\xe2\x89\xa41091\xe2\x89\xa4n\xe2\x89\xa4109, 1\xe2\x89\xa4m\xe2\x89\xa43000001\xe2\x89\xa4m\xe2\x89\xa4300000), the number of cars in the train at the time of departure from the station and the number of stations, respectively.'
b'Next mm lines contain the descriptions of events. Each event is one of the following three types:'
b'  "11 kk" (1\xe2\x89\xa4k\xe2\x89\xa41091\xe2\x89\xa4k\xe2\x89\xa4109), add kk cars to the head of the train  "22 kk" (1\xe2\x89\xa4k\xe2\x89\xa41091\xe2\x89\xa4k\xe2\x89\xa4109), add kk cars to the tail of the train  "33 bb ss" (1\xe2\x89\xa4b,s\xe2\x89\xa41091\xe2\x89\xa4b,s\xe2\x89\xa4109), recalculate the convenience of all train cars. '
b"It is guaranteed that at any time the train length does not exceed 109109. Also it's guaranteed that the integers AiAi will not grow too high. Formally, it's guaranteed that if we sum the largest addition over all events of the 33-rd type (that is, b+(n\xe2\x88\x921)\xe2\x8b\x85sb+(n\xe2\x88\x921)\xe2\x8b\x85s, where nn is the number of cars at that moment) then the acquired sum would be at most 10181018."
b'Output'
b'After each of the mm queries print two integers: jj and AjAj\xc2\xa0\xe2\x80\x94 the number of the car closest to the head of the train, such that its value AjAj is minimal, and the value AjAj itself.'
Tags
data structures, greedy, *2700
