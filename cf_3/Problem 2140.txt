b'You are given an array aa consisting of nn integers. In one move, you can jump from the position ii to the position i\xe2\x88\x92aii\xe2\x88\x92ai (if 1\xe2\x89\xa4i\xe2\x88\x92ai1\xe2\x89\xa4i\xe2\x88\x92ai) or to the position i+aii+ai (if i+ai\xe2\x89\xa4ni+ai\xe2\x89\xa4n).'
b'For each position ii from 11 to nn you want to know the minimum the number of moves required to reach any position jj such that ajaj has the opposite parity from aiai (i.e. if aiai is odd then ajaj has to be even and vice versa).'
b'Input'
b'The first line of the input contains one integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of elements in aa.'
b'The second line of the input contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa4n1\xe2\x89\xa4ai\xe2\x89\xa4n), where aiai is the ii-th element of aa.'
b'Output'
b'Print nn integers d1,d2,\xe2\x80\xa6,dnd1,d2,\xe2\x80\xa6,dn, where didi is the minimum the number of moves required to reach any position jj such that ajaj has the opposite parity from aiai (i.e. if aiai is odd then ajaj has to be even and vice versa) or -1 if it is impossible to reach such a position.'
Tags
dfs and similar, graphs, shortest paths, *1900
