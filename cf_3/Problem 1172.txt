b'There are nn digital panels placed in a straight line. Each panel can show any digit from 00 to 99. Initially, all panels show 00.'
b'Every second, the digit shown by each panel increases by 11. In other words, at the end of every second, a panel that showed 99 would now show 00, a panel that showed 00 would now show 11, a panel that showed 11 would now show 22, and so on.'
b'When a panel is paused, the digit displayed on the panel does not change in the subsequent seconds.'
b'You must pause exactly one of these panels, at any second you wish. Then, the panels adjacent to it get paused one second later, the panels adjacent to those get paused 22 seconds later, and so on. In other words, if you pause panel xx, panel yy (for all valid yy) would be paused exactly |x\xe2\x88\x92y||x\xe2\x88\x92y| seconds later.'
b'For example, suppose there are 44 panels, and the 33-rd panel is paused when the digit 99 is on it.'
b'  The panel 11 pauses 22 seconds later, so it has the digit 11;  the panel 22 pauses 11 second later, so it has the digit 00;  the panel 44 pauses 11 second later, so it has the digit 00. '
b'The resulting 44-digit number is 10901090. Note that this example is not optimal for n=4n=4.'
b'Once all panels have been paused, you write the digits displayed on them from left to right, to form an nn digit number (it can consist of leading zeros). What is the largest possible number you can get? Initially, all panels show 00.'
b'Input'
b'The first line of the input contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa41001\xe2\x89\xa4t\xe2\x89\xa4100) \xe2\x80\x94 the number of test cases. Each test case consists of a single line containing a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105).'
b'It is guaranteed that the sum of nn over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.'
b'Output'
b'For each test case, print the largest number you can achieve, if you pause one panel optimally.'
Tags
constructive algorithms, greedy, math, *900
