b'Gildong is experimenting with an interesting machine Graph Traveler. In Graph Traveler, there is a directed graph consisting of nn vertices numbered from 11 to nn. The ii-th vertex has mimi outgoing edges that are labeled as ei[0]ei[0], ei[1]ei[1], \xe2\x80\xa6\xe2\x80\xa6, ei[mi\xe2\x88\x921]ei[mi\xe2\x88\x921], each representing the destination vertex of the edge. The graph can have multiple edges and self-loops. The ii-th vertex also has an integer kiki written on itself.'
b'A travel on this graph works as follows. '
b'  Gildong chooses a vertex to start from, and an integer to start with. Set the variable cc to this integer.  After arriving at the vertex ii, or when Gildong begins the travel at some vertex ii, add kiki to cc.  The next vertex is ei[x]ei[x] where xx is an integer 0\xe2\x89\xa4x\xe2\x89\xa4mi\xe2\x88\x9210\xe2\x89\xa4x\xe2\x89\xa4mi\xe2\x88\x921 satisfying x\xe2\x89\xa1c(modmi)x\xe2\x89\xa1c(modmi). Go to the next vertex and go back to step 2. '
b"It's obvious that a travel never ends, since the 2nd and the 3rd step will be repeated endlessly."
b'For example, assume that Gildong starts at vertex 11 with c=5c=5, and m1=2m1=2, e1[0]=1e1[0]=1, e1[1]=2e1[1]=2, k1=\xe2\x88\x923k1=\xe2\x88\x923. Right after he starts at vertex 11, cc becomes 22. Since the only integer xx (0\xe2\x89\xa4x\xe2\x89\xa410\xe2\x89\xa4x\xe2\x89\xa41) where x\xe2\x89\xa1c(modmi)x\xe2\x89\xa1c(modmi) is 00, Gildong goes to vertex e1[0]=1e1[0]=1. After arriving at vertex 11 again, cc becomes \xe2\x88\x921\xe2\x88\x921. The only integer xx satisfying the conditions is 11, so he goes to vertex e1[1]=2e1[1]=2, and so on.'
b"Since Gildong is quite inquisitive, he's going to ask you qq queries. He wants to know how many distinct vertices will be visited infinitely many times, if he starts the travel from a certain vertex with a certain value of cc. Note that you should not count the vertices that will be visited only finite times."
b'Input'
b'The first line of the input contains an integer nn (1\xe2\x89\xa4n\xe2\x89\xa410001\xe2\x89\xa4n\xe2\x89\xa41000), the number of vertices in the graph.'
b'The second line contains nn integers. The ii-th integer is kiki (\xe2\x88\x92109\xe2\x89\xa4ki\xe2\x89\xa4109\xe2\x88\x92109\xe2\x89\xa4ki\xe2\x89\xa4109), the integer written on the ii-th vertex.'
b'Next 2\xe2\x8b\x85n2\xe2\x8b\x85n lines describe the edges of each vertex. The (2\xe2\x8b\x85i+1)(2\xe2\x8b\x85i+1)-st line contains an integer mimi (1\xe2\x89\xa4mi\xe2\x89\xa4101\xe2\x89\xa4mi\xe2\x89\xa410), the number of outgoing edges of the ii-th vertex. The (2\xe2\x8b\x85i+2)(2\xe2\x8b\x85i+2)-nd line contains mimi integers ei[0]ei[0], ei[1]ei[1], \xe2\x80\xa6\xe2\x80\xa6, ei[mi\xe2\x88\x921]ei[mi\xe2\x88\x921], each having an integer value between 11 and nn, inclusive.'
b'Next line contains an integer qq (1\xe2\x89\xa4q\xe2\x89\xa41051\xe2\x89\xa4q\xe2\x89\xa4105), the number of queries Gildong wants to ask.'
b'Next qq lines contains two integers xx and yy (1\xe2\x89\xa4x\xe2\x89\xa4n1\xe2\x89\xa4x\xe2\x89\xa4n, \xe2\x88\x92109\xe2\x89\xa4y\xe2\x89\xa4109\xe2\x88\x92109\xe2\x89\xa4y\xe2\x89\xa4109) each, which mean that the start vertex is xx and the starting value of cc is yy.'
b'Output'
b'For each query, print the number of distinct vertices that will be visited infinitely many times, if Gildong starts at vertex xx with starting integer yy.'
Tags
brute force, data structures, dfs and similar, dp, graphs, implementation, math, number theory, *2300
