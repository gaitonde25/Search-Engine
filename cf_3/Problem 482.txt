b'You are given a matrix, consisting of nn rows and mm columns. The rows are numbered top to bottom, the columns are numbered left to right.'
b'Each cell of the matrix can be either free or locked.'
b"Let's call a path in the matrix a staircase if it: "
b'  starts and ends in the free cell;  visits only free cells;  has one of the two following structures:   the second cell is 11 to the right from the first one, the third cell is 11 to the bottom from the second one, the fourth cell is 11 to the right from the third one, and so on;  the second cell is 11 to the bottom from the first one, the third cell is 11 to the right from the second one, the fourth cell is 11 to the bottom from the third one, and so on.  '
b'In particular, a path, consisting of a single cell, is considered to be a staircase.'
b'Here are some examples of staircases:'
b'  '
b'Initially all the cells of the matrix are free.'
b'You have to process qq queries, each of them flips the state of a single cell. So, if a cell is currently free, it makes it locked, and if a cell is currently locked, it makes it free.'
b"Print the number of different staircases after each query. Two staircases are considered different if there exists such a cell that appears in one path and doesn't appear in the other path."
b'Input'
b'The first line contains three integers nn, mm and qq (1\xe2\x89\xa4n,m\xe2\x89\xa410001\xe2\x89\xa4n,m\xe2\x89\xa41000; 1\xe2\x89\xa4q\xe2\x89\xa41041\xe2\x89\xa4q\xe2\x89\xa4104)\xc2\xa0\xe2\x80\x94 the sizes of the matrix and the number of queries.'
b'Each of the next qq lines contains two integers xx and yy (1\xe2\x89\xa4x\xe2\x89\xa4n1\xe2\x89\xa4x\xe2\x89\xa4n; 1\xe2\x89\xa4y\xe2\x89\xa4m1\xe2\x89\xa4y\xe2\x89\xa4m)\xc2\xa0\xe2\x80\x94 the description of each query.'
b'Output'
b"Print qq integers\xc2\xa0\xe2\x80\x94 the ii-th value should be equal to the number of different staircases after ii queries. Two staircases are considered different if there exists such a cell that appears in one path and doesn't appear in the other path."
Tags
brute force, combinatorics, data structures, dfs and similar, dp, implementation, math, *2100
