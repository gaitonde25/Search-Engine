b'You are given an undirected graph consisting of nn vertices and mm edges. Initially there is a single integer written on every vertex: the vertex ii has pipi written on it. All pipi are distinct integers from 11 to nn.'
b'You have to process qq queries of two types:'
b'  11 vv \xe2\x80\x94 among all vertices reachable from the vertex vv using the edges of the graph (including the vertex vv itself), find a vertex uu with the largest number pupu written on it, print pupu and replace pupu with 00;  22 ii \xe2\x80\x94 delete the ii-th edge from the graph. '
b' '
b'Note that, in a query of the first type, it is possible that all vertices reachable from vv have 00 written on them. In this case, uu is not explicitly defined, but since the selection of uu does not affect anything, you can choose any vertex reachable from vv and print its value (which is 00). '
b'Input'
b'The first line contains three integers nn, mm and qq (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105; 1\xe2\x89\xa4m\xe2\x89\xa43\xe2\x8b\x851051\xe2\x89\xa4m\xe2\x89\xa43\xe2\x8b\x85105; 1\xe2\x89\xa4q\xe2\x89\xa45\xe2\x8b\x851051\xe2\x89\xa4q\xe2\x89\xa45\xe2\x8b\x85105).'
b'The second line contains nn distinct integers p1p1, p2p2, ..., pnpn, where pipi is the number initially written on vertex ii (1\xe2\x89\xa4pi\xe2\x89\xa4n1\xe2\x89\xa4pi\xe2\x89\xa4n).'
b'Then mm lines follow, the ii-th of them contains two integers aiai and bibi (1\xe2\x89\xa4ai,bi\xe2\x89\xa4n1\xe2\x89\xa4ai,bi\xe2\x89\xa4n, ai\xe2\x89\xa0biai\xe2\x89\xa0bi) and means that the ii-th edge connects vertices aiai and bibi. It is guaranteed that the graph does not contain multi-edges.'
b'Then qq lines follow, which describe the queries. Each line is given by one of the following formats:'
b'  11 vv \xe2\x80\x94 denotes a query of the first type with a vertex vv (1\xe2\x89\xa4v\xe2\x89\xa4n1\xe2\x89\xa4v\xe2\x89\xa4n).  22 ii \xe2\x80\x94 denotes a query of the second type with an edge ii (1\xe2\x89\xa4i\xe2\x89\xa4m1\xe2\x89\xa4i\xe2\x89\xa4m). For each query of the second type, it is guaranteed that the corresponding edge is not deleted from the graph yet. '
b'Output'
b'For every query of the first type, print the value of pupu written on the chosen vertex uu.'
Tags
data structures, dsu, graphs, implementation, trees, *2600
