b'This is an easy version of the problem. The actual problems are different, but the easy version is almost a subtask of the hard version. Note that the constraints and the output format are different.'
b'You are given a string ss consisting of nn lowercase Latin letters.'
b'You have to color all its characters one of the two colors (each character to exactly one color, the same letters can be colored the same or different colors, i.e. you can choose exactly one color for each index in ss).'
b'After coloring, you can swap any two neighboring characters of the string that are colored different colors. You can perform such an operation arbitrary (possibly, zero) number of times.'
b'The goal is to make the string sorted, i.e. all characters should be in alphabetical order.'
b'Your task is to say if it is possible to color the given string so that after coloring it can become sorted by some sequence of swaps. Note that you have to restore only coloring, not the sequence of swaps.'
b'Input'
b'The first line of the input contains one integer nn (1\xe2\x89\xa4n\xe2\x89\xa42001\xe2\x89\xa4n\xe2\x89\xa4200) \xe2\x80\x94 the length of ss.'
b'The second line of the input contains the string ss consisting of exactly nn lowercase Latin letters.'
b'Output'
b'If it is impossible to color the given string so that after coloring it can become sorted by some sequence of swaps, print "NO" (without quotes) in the first line.'
b'Otherwise, print "YES" in the first line and any correct coloring in the second line (the coloring is the string consisting of nn characters, the ii-th character should be \'0\' if the ii-th character is colored the first color and \'1\' otherwise).'
Tags
constructive algorithms, dp, graphs, greedy, sortings, *1800
