b'You have a connected undirected graph made of nn nodes and mm edges. The ii-th node has a value vivi and a target value titi.'
b'In an operation, you can choose an edge (i,j)(i,j) and add kk to both vivi and vjvj, where kk can be any integer. In particular, kk can be negative.'
b'Your task to determine if it is possible that by doing some finite number of operations (possibly zero), you can achieve for every node ii, vi=tivi=ti.'
b'Input'
b'The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa410001\xe2\x89\xa4t\xe2\x89\xa41000), the number of test cases. Then the test cases follow.'
b'The first line of each test case contains two integers nn, mm (2\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851052\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105, n\xe2\x88\x921\xe2\x89\xa4m\xe2\x89\xa4min(2\xe2\x8b\x85105,n(n\xe2\x88\x921)2)n\xe2\x88\x921\xe2\x89\xa4m\xe2\x89\xa4min(2\xe2\x8b\x85105,n(n\xe2\x88\x921)2)) \xe2\x80\x94 the number of nodes and edges respectively.'
b'The second line contains nn integers v1\xe2\x80\xa6,vnv1\xe2\x80\xa6,vn (\xe2\x88\x92109\xe2\x89\xa4vi\xe2\x89\xa4109\xe2\x88\x92109\xe2\x89\xa4vi\xe2\x89\xa4109) \xe2\x80\x94 initial values of nodes.'
b'The third line contains nn integers t1\xe2\x80\xa6,tnt1\xe2\x80\xa6,tn (\xe2\x88\x92109\xe2\x89\xa4ti\xe2\x89\xa4109\xe2\x88\x92109\xe2\x89\xa4ti\xe2\x89\xa4109) \xe2\x80\x94 target values of nodes.'
b'Each of the next mm lines contains two integers ii and jj representing an edge between node ii and node jj (1\xe2\x89\xa4i,j\xe2\x89\xa4n1\xe2\x89\xa4i,j\xe2\x89\xa4n, i\xe2\x89\xa0ji\xe2\x89\xa0j).'
b'It is guaranteed that the graph is connected and there is at most one edge between the same pair of nodes.'
b'It is guaranteed that the sum of nn over all testcases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105 and the sum of mm over all testcases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.'
b'Output'
b'For each test case, if it is possible for every node to reach its target after some number of operations, print "YES". Otherwise, print "NO".'
Tags
constructive algorithms, dfs and similar, dsu, graphs, greedy, math, *2200
