b"You're given an array a1,\xe2\x80\xa6,ana1,\xe2\x80\xa6,an of nn non-negative integers."
b"Let's call it sharpened if and only if there exists an integer 1\xe2\x89\xa4k\xe2\x89\xa4n1\xe2\x89\xa4k\xe2\x89\xa4n such that a1<a2<\xe2\x80\xa6<aka1<a2<\xe2\x80\xa6<ak and ak>ak+1>\xe2\x80\xa6>anak>ak+1>\xe2\x80\xa6>an. In particular, any strictly increasing or strictly decreasing array is sharpened. For example:"
b'  The arrays [4][4], [0,1][0,1], [12,10,8][12,10,8] and [3,11,15,9,7,4][3,11,15,9,7,4] are sharpened;  The arrays [2,8,2,8,6,5][2,8,2,8,6,5], [0,1,1,0][0,1,1,0] and [2,5,6,9,8,8][2,5,6,9,8,8] are not sharpened. '
b'You can do the following operation as many times as you want: choose any strictly positive element of the array, and decrease it by one. Formally, you can choose any ii (1\xe2\x89\xa4i\xe2\x89\xa4n1\xe2\x89\xa4i\xe2\x89\xa4n) such that ai>0ai>0 and assign ai:=ai\xe2\x88\x921ai:=ai\xe2\x88\x921.'
b"Tell if it's possible to make the given array sharpened using some number (possibly zero) of these operations."
b'Input'
b'The input consists of multiple test cases. The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa415\xc2\xa00001\xe2\x89\xa4t\xe2\x89\xa415\xc2\xa0000) \xc2\xa0\xe2\x80\x94 the number of test cases. The description of the test cases follows.'
b'The first line of each test case contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa43\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa43\xe2\x8b\x85105).'
b'The second line of each test case contains a sequence of nn non-negative integers a1,\xe2\x80\xa6,ana1,\xe2\x80\xa6,an (0\xe2\x89\xa4ai\xe2\x89\xa41090\xe2\x89\xa4ai\xe2\x89\xa4109).'
b'It is guaranteed that the sum of nn over all test cases does not exceed 3\xe2\x8b\x851053\xe2\x8b\x85105.'
b'Output'
b'For each test case, output a single line containing "Yes" (without quotes) if it\'s possible to make the given array sharpened using the described operations, or "No" (without quotes) otherwise.'
Tags
greedy, implementation, *1300
