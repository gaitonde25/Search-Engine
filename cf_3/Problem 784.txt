b'Suppose you are given two strings aa and bb. You can apply the following operation any number of times: choose any contiguous substring of aa or bb, and sort the characters in it in non-descending order. Let f(a,b)f(a,b) the minimum number of operations you have to apply in order to make them equal (or f(a,b)=1337f(a,b)=1337 if it is impossible to make aa and bb equal using these operations).'
b'For example: '
b'  f(ab,ab)=0f(ab,ab)=0;  f(ba,ab)=1f(ba,ab)=1 (in one operation, we can sort the whole first string);  f(ebcda,ecdba)=1f(ebcda,ecdba)=1 (in one operation, we can sort the substring of the second string starting from the 22-nd character and ending with the 44-th character);  f(a,b)=1337f(a,b)=1337. '
b'You are given nn strings s1,s2,\xe2\x80\xa6,sks1,s2,\xe2\x80\xa6,sk having equal length. Calculate \xe2\x88\x91i=1n\xe2\x88\x91j=i+1nf(si,sj)\xe2\x88\x91i=1n\xe2\x88\x91j=i+1nf(si,sj).'
b'Input'
b'The first line contains one integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of strings.'
b'Then nn lines follow, each line contains one of the strings sisi, consisting of lowercase Latin letters. |s1|=|s2|=\xe2\x80\xa6=|sn||s1|=|s2|=\xe2\x80\xa6=|sn|, and n\xe2\x8b\x85|s1|\xe2\x89\xa42\xe2\x8b\x85105n\xe2\x8b\x85|s1|\xe2\x89\xa42\xe2\x8b\x85105. All these strings are pairwise distinct.'
b'Output'
b'Print one integer: \xe2\x88\x91i=1n\xe2\x88\x91j=i+1nf(si,sj)\xe2\x88\x91i=1n\xe2\x88\x91j=i+1nf(si,sj).'
Tags
binary search, brute force, data structures, hashing, implementation, strings, *3000
