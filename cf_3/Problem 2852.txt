b"Lena is playing with matches. The natural question arising in the head of any child playing with matches is whether it's possible to set a tree on fire with a matches, or not."
b"Let's say, that the tree is a connected graph without cycles and the vertices are labeled with integers 1,2,\xe2\x80\xa6,n1,2,\xe2\x80\xa6,n. Also every vertex vv has some integer priority pvpv associated with it. All priorities are distinct."
b"It turns out, that if you set a tree on fire, it will burn to nothing. However, this process doesn't happen instantly. At the beginning, burns out the leaf (a vertex is called to be a leaf if it has only one adjacent vertex) of the tree of the minimum priority. Then burns out the leaf of the minimal priority of the remaining tree, and so on. This way, the vertices turn into the leaves and burn out until only one vertex remains. Then this vertex burns out as well."
b'Lena has prepared a tree of nn vertices and every vertex in it has a priority pv=vpv=v. Lena is very curious about burning out this tree. However, she understands, that if she will burn the tree now, then it will disappear completely. Lena is a kind girl and she will feel bad for the burned tree, so she wants to study the process of burning the tree only in her mind. Lena wants to process qq queries, each of them is one of three following types:'
b'  "up vv", assign the vertex vv priority 1+max{p1,p2,\xe2\x80\xa6,pn}1+max{p1,p2,\xe2\x80\xa6,pn};  "when vv", find the step at which the vertex vv will burn out, if the tree would be set on fire now;  "compare vv uu", find out which of the vertices vv and uu will burn out first, if the tree would be set on fire now. '
b'Notice, that if all priorities would be distinct, then after the "up" query they will stay distinct as well. Initially all priorities are distinct, hence during any (purely hypothetical of course) burning of the tree, all leafs would have distinct priorities.'
b'Input'
b'The first line contains two integers nn and qq (2\xe2\x89\xa4n\xe2\x89\xa42000002\xe2\x89\xa4n\xe2\x89\xa4200000, 1\xe2\x89\xa4q\xe2\x89\xa42000001\xe2\x89\xa4q\xe2\x89\xa4200000)\xc2\xa0\xe2\x80\x94 the number of vertices in the tree and the number of queries.'
b'The ii-th of the following n\xe2\x88\x921n\xe2\x88\x921 lines contains two integers vivi, uiui (1\xe2\x89\xa4vi,ui\xe2\x89\xa4n1\xe2\x89\xa4vi,ui\xe2\x89\xa4n), denoting the endpoints of the ii-th edge.'
b'Each of the remaining qq lines contains a query of one of the following three types:'
b'  "up vv" (1\xe2\x89\xa4v\xe2\x89\xa4n1\xe2\x89\xa4v\xe2\x89\xa4n)\xc2\xa0\xe2\x80\x94 change the priority of vertex vv;  "when vv" (1\xe2\x89\xa4v\xe2\x89\xa4n1\xe2\x89\xa4v\xe2\x89\xa4n)\xc2\xa0\xe2\x80\x94 determine the step at which the vertex vv will burn out;  "compare vv uu" (1\xe2\x89\xa4v,u\xe2\x89\xa4n1\xe2\x89\xa4v,u\xe2\x89\xa4n, v\xe2\x89\xa0uv\xe2\x89\xa0u)\xc2\xa0\xe2\x80\x94 determine which of vertices vv and uu will burn out earlier in the current tree. '
b'It\'s guaranteed, that there is at least one query of type "when" or "compare".'
b'Output'
b'For every query of type "when" print one integer in range from 11 to nn\xc2\xa0\xe2\x80\x94 the step at which the vertex vv will burn out.'
b'For every query of type "compare" print either vv or uu, depending on which one will burn out earlier.'
Tags
data structures, trees, *3400
