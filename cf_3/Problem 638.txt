b'You have a permutation: an array a=[a1,a2,\xe2\x80\xa6,an]a=[a1,a2,\xe2\x80\xa6,an] of distinct integers from 11 to nn. The length of the permutation nn is odd.'
b'Consider the following algorithm of sorting the permutation in increasing order.'
b"A helper procedure of the algorithm, f(i)f(i), takes a single argument ii (1\xe2\x89\xa4i\xe2\x89\xa4n\xe2\x88\x9211\xe2\x89\xa4i\xe2\x89\xa4n\xe2\x88\x921) and does the following. If ai>ai+1ai>ai+1, the values of aiai and ai+1ai+1 are exchanged. Otherwise, the permutation doesn't change."
b'The algorithm consists of iterations, numbered with consecutive integers starting with 11. On the ii-th iteration, the algorithm does the following: '
b'  if ii is odd, call f(1),f(3),\xe2\x80\xa6,f(n\xe2\x88\x922)f(1),f(3),\xe2\x80\xa6,f(n\xe2\x88\x922);  if ii is even, call f(2),f(4),\xe2\x80\xa6,f(n\xe2\x88\x921)f(2),f(4),\xe2\x80\xa6,f(n\xe2\x88\x921). '
b'It can be proven that after a finite number of iterations the permutation will be sorted in increasing order.'
b'After how many iterations will this happen for the first time?'
b'Input'
b'Each test contains multiple test cases. The first line contains the number of test cases tt (1\xe2\x89\xa4t\xe2\x89\xa41001\xe2\x89\xa4t\xe2\x89\xa4100). Description of the test cases follows.'
b'The first line of each test case contains a single integer nn (3\xe2\x89\xa4n\xe2\x89\xa49993\xe2\x89\xa4n\xe2\x89\xa4999; nn is odd)\xc2\xa0\xe2\x80\x94 the length of the permutation.'
b'The second line contains nn distinct integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (1\xe2\x89\xa4ai\xe2\x89\xa4n1\xe2\x89\xa4ai\xe2\x89\xa4n)\xc2\xa0\xe2\x80\x94 the permutation itself. '
b'It is guaranteed that the sum of nn over all test cases does not exceed 999999.'
b'Output'
b'For each test case print the number of iterations after which the permutation will become sorted in increasing order for the first time.'
b'If the given permutation is already sorted, print 00.'
Tags
brute force, implementation, sortings, *800
