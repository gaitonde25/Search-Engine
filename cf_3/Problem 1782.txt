b'Phoenix has decided to become a scientist! He is currently investigating the growth of bacteria.'
b'Initially, on day 11, there is one bacterium with mass 11.'
b'Every day, some number of bacteria will split (possibly zero or all). When a bacterium of mass mm splits, it becomes two bacteria of mass m2m2 each. For example, a bacterium of mass 33 can split into two bacteria of mass 1.51.5.'
b'Also, every night, the mass of every bacteria will increase by one.'
b'Phoenix is wondering if it is possible for the total mass of all the bacteria to be exactly nn. If it is possible, he is interested in the way to obtain that mass using the minimum possible number of nights. Help him become the best scientist!'
b'Input'
b'The input consists of multiple test cases. The first line contains an integer tt (1\xe2\x89\xa4t\xe2\x89\xa410001\xe2\x89\xa4t\xe2\x89\xa41000)\xc2\xa0\xe2\x80\x94 the number of test cases.'
b'The first line of each test case contains an integer nn (2\xe2\x89\xa4n\xe2\x89\xa41092\xe2\x89\xa4n\xe2\x89\xa4109)\xc2\xa0\xe2\x80\x94 the sum of bacteria masses that Phoenix is interested in. '
b'Output'
b'For each test case, if there is no way for the bacteria to exactly achieve total mass nn, print -1. Otherwise, print two lines.'
b'The first line should contain an integer dd \xc2\xa0\xe2\x80\x94 the minimum number of nights needed.'
b'The next line should contain dd integers, with the ii-th integer representing the number of bacteria that should split on the ii-th day.'
b'If there are multiple solutions, print any.'
Tags
binary search, constructive algorithms, greedy, implementation, math, *1900
