b' Denis was very sad after Nastya rejected him. So he decided to walk through the gateways to have some fun. And luck smiled at him! When he entered the first courtyard, he met a strange man who was selling something. '
b'Denis bought a mysterious item and it was... Random permutation generator! Denis could not believed his luck.'
b'When he arrived home, he began to study how his generator works and learned the algorithm. The process of generating a permutation consists of nn steps. At the ii-th step, a place is chosen for the number ii (1\xe2\x89\xa4i\xe2\x89\xa4n)(1\xe2\x89\xa4i\xe2\x89\xa4n). The position for the number ii is defined as follows:'
b'  For all jj from 11 to nn, we calculate rjrj \xc2\xa0\xe2\x80\x94 the minimum index such that j\xe2\x89\xa4rj\xe2\x89\xa4nj\xe2\x89\xa4rj\xe2\x89\xa4n, and the position rjrj is not yet occupied in the permutation. If there are no such positions, then we assume that the value of rjrj is not defined.  For all tt from 11 to nn, we calculate counttcountt \xc2\xa0\xe2\x80\x94 the number of positions 1\xe2\x89\xa4j\xe2\x89\xa4n1\xe2\x89\xa4j\xe2\x89\xa4n such that rjrj is defined and rj=trj=t.  Consider the positions that are still not occupied by permutation and among those we consider the positions for which the value in the countcount array is maximum.  The generator selects one of these positions for the number ii. The generator can choose any position. '
b"Let's have a look at the operation of the algorithm in the following example:"
b'  '
b'Let n=5n=5 and the algorithm has already arranged the numbers 1,2,31,2,3 in the permutation. Consider how the generator will choose a position for the number 44:'
b'  The values of rr will be r=[3,3,3,4,\xc3\x97]r=[3,3,3,4,\xc3\x97], where \xc3\x97\xc3\x97 means an indefinite value.  Then the countcount values will be count=[0,0,3,1,0]count=[0,0,3,1,0].  There are only two unoccupied positions in the permutation: 33 and 44. The value in the countcount array for position 33 is 33, for position 44 it is 11.  The maximum value is reached only for position 33, so the algorithm will uniquely select this position for number 44. '
b'Satisfied with his purchase, Denis went home. For several days without a break, he generated permutations. He believes that he can come up with random permutations no worse than a generator. After that, he wrote out the first permutation that came to mind p1,p2,\xe2\x80\xa6,pnp1,p2,\xe2\x80\xa6,pn and decided to find out if it could be obtained as a result of the generator.'
b'Unfortunately, this task was too difficult for him, and he asked you for help. It is necessary to define whether the written permutation could be obtained using the described algorithm if the generator always selects the position Denis needs.'
b'Input'
b'The first line contains a single integer tt (1\xe2\x89\xa4t\xe2\x89\xa4105)(1\xe2\x89\xa4t\xe2\x89\xa4105) \xc2\xa0\xe2\x80\x94 the number of test cases. Then the descriptions of the test cases follow.'
b'The first line of the test case contains a single integer nn (1\xe2\x89\xa4n\xe2\x89\xa4105)(1\xe2\x89\xa4n\xe2\x89\xa4105) \xc2\xa0\xe2\x80\x94 the size of the permutation.'
b'The second line of the test case contains nn different integers p1,p2,\xe2\x80\xa6,pnp1,p2,\xe2\x80\xa6,pn (1\xe2\x89\xa4pi\xe2\x89\xa4n1\xe2\x89\xa4pi\xe2\x89\xa4n) \xc2\xa0\xe2\x80\x94 the permutation written by Denis.'
b"It is guaranteed that the sum of nn over all test cases doesn't exceed 105105."
b'Output'
b'Print "Yes" if this permutation could be obtained as a result of the generator. Otherwise, print "No".'
b'All letters can be displayed in any case.'
Tags
brute force, data structures, greedy, implementation, *1500
