b'Two integer sequences existed initially \xe2\x80\x94 one of them was strictly increasing, and the other one \xe2\x80\x94 strictly decreasing.'
b'Strictly increasing sequence is a sequence of integers [x1<x2<\xe2\x8b\xaf<xk][x1<x2<\xe2\x8b\xaf<xk]. And strictly decreasing sequence is a sequence of integers [y1>y2>\xe2\x8b\xaf>yl][y1>y2>\xe2\x8b\xaf>yl]. Note that the empty sequence and the sequence consisting of one element can be considered as increasing or decreasing.'
b'They were merged into one sequence aa. After that sequence aa got shuffled. For example, some of the possible resulting sequences aa for an increasing sequence [1,3,4][1,3,4] and a decreasing sequence [10,4,2][10,4,2] are sequences [1,2,3,4,4,10][1,2,3,4,4,10] or [4,2,1,10,4,3][4,2,1,10,4,3].'
b'This shuffled sequence aa is given in the input.'
b'Your task is to find any two suitable initial sequences. One of them should be strictly increasing and the other one \xe2\x80\x94 strictly decreasing. Note that the empty sequence and the sequence consisting of one element can be considered as increasing or decreasing.'
b'If there is a contradiction in the input and it is impossible to split the given sequence aa to increasing and decreasing sequences, print "NO".'
b'Input'
b'The first line of the input contains one integer nn (1\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x851051\xe2\x89\xa4n\xe2\x89\xa42\xe2\x8b\x85105) \xe2\x80\x94 the number of elements in aa.'
b'The second line of the input contains nn integers a1,a2,\xe2\x80\xa6,ana1,a2,\xe2\x80\xa6,an (0\xe2\x89\xa4ai\xe2\x89\xa42\xe2\x8b\x851050\xe2\x89\xa4ai\xe2\x89\xa42\xe2\x8b\x85105), where aiai is the ii-th element of aa.'
b'Output'
b'If there is a contradiction in the input and it is impossible to split the given sequence aa to increasing and decreasing sequences, print "NO" in the first line.'
b'Otherwise print "YES" in the first line and any two suitable sequences. Note that the empty sequence and the sequence consisting of one element can be considered as increasing or decreasing.'
b'In the second line print nini \xe2\x80\x94 the number of elements in the strictly increasing sequence. nini can be zero, in this case the increasing sequence is empty.'
b'In the third line print nini integers inc1,inc2,\xe2\x80\xa6,incniinc1,inc2,\xe2\x80\xa6,incni in the increasing order of its values (inc1<inc2<\xe2\x8b\xaf<incniinc1<inc2<\xe2\x8b\xaf<incni) \xe2\x80\x94 the strictly increasing sequence itself. You can keep this line empty if ni=0ni=0 (or just print the empty line).'
b'In the fourth line print ndnd \xe2\x80\x94 the number of elements in the strictly decreasing sequence. ndnd can be zero, in this case the decreasing sequence is empty.'
b'In the fifth line print ndnd integers dec1,dec2,\xe2\x80\xa6,decnddec1,dec2,\xe2\x80\xa6,decnd in the decreasing order of its values (dec1>dec2>\xe2\x8b\xaf>decnddec1>dec2>\xe2\x8b\xaf>decnd) \xe2\x80\x94 the strictly decreasing sequence itself. You can keep this line empty if nd=0nd=0 (or just print the empty line).'
b'ni+ndni+nd should be equal to nn and the union of printed sequences should be a permutation of the given sequence (in case of "YES" answer).'
Tags
constructive algorithms, sortings, *1000
